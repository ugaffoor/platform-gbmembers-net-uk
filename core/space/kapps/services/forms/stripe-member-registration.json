{
  "anonymous": false,
  "attributes": [
    {
      "name": "Cancel Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Cloning Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Comment Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Submission Workflow",
      "values": [
        "Submitted - True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Members",
      "name": "Get Family Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Family Member')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Members')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member by Username",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${identity('username')}",
          "name": "username"
        }
      ],
      "qualification": "Get Member by Username",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Get Program",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Programs')}",
          "name": "ID"
        }
      ],
      "qualification": "By ID",
      "status": "Active"
    },
    {
      "model": "Service Member Submissions",
      "name": "Get Stripe Member Registrations",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Member GUID')}",
          "name": "Member GUID"
        }
      ],
      "qualification": "Get Stripe Member Registrations",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Stripe Terms and Conditions",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Stripe Terms and Conditions",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Terms and Conditions",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Stripe Member Registration",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Members",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Active Members",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Program Fees",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Payment Frequency')}",
          "name": "Frequency"
        }
      ],
      "qualification": "By Frequency",
      "status": "Active"
    }
  ],
  "categorizations": [
    {
      "category": {
        "slug": "stripe-billing"
      }
    }
  ],
  "customHeadContent": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script src=\"https://js.stripe.com/v3/\" defer></script>\n<script>\nvar stripe = null;\nvar elements = null;\n\nvar cardElement = null;\nvar ibanElement = null;\nvar sourceID = null;  \n</script>\n<style>\n  #card-element {\n    width: 400px;\n\t}\n</style>\n<script>\n  function GetURLParameter(sParam){\n    arr=window.location.hash.split(sParam+\"=\");\n    if (arr.length>0){\n      return arr[1];\n    }\n    return null;\n  }  \n</script>\n<script>\n\tfunction completeRegisterUser() {\n    debugger;\n    var registerSettings = {\n      \"crossDomain\": true,\n      \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/registerUser\",\n      \"method\": \"POST\",\n      \"headers\": {},\n      \"dataType\": \"json\",\n      \"contentType\": \"application/json\",\n      \"data\": JSON.stringify({\n        \"customerId\": K('field[Member ID]').value(),\n        \"firstName\": K('field[First Name]').value(),\n        \"lastName\": K('field[Last Name]').value(),\n        \"dob\": K('field[DOB]').value(),\n        \"address\": K('field[Address]').value(),\n        \"suburb\": K('field[Suburb]').value(),\n        \"state\": K('field[State]').value(),\n        \"postCode\": K('field[Postcode]').value(),\n        \"email\": K('field[Email]').value(),\n        \"mobile\": K('field[Mobile]').value(),\n        \"payment\": K('field[Payment]').value(),\n        \"firstPayment\": K('field[First Payment]').value(),\n        \"billingPeriod\": K('field[Billing Period]').value(),\n        \"contractStartDate\": K('field[Billing Start Date]').value(),\n        \"paymentMethod\": K('field[Payment Method]').value(),\n        \"cardToken\": sourceID,\n        \"adminFee\": \"\", /*K('field[Admin Fee]').value().replace(\"%\",\"\"),*/\n        \"setupFee\": \"\", /*K('field[Setup Fee]').value().replace(\"%\",\"\"),*/\n        \"space\": K('space').slug(),\n        \"billingService\": K('space').attributes('Billing Company'),\n        \"currency\": K('space').attributes('Currency'),\n      })\n    }\n    $.ajax(registerSettings).done(function (response) {\n      debugger;\n      console.log(response);\n      if (response.error===100) {\n        var message=response.errorMessage;\n        if (response.errorMessage===\"DECLINE\") {\n          message=\"Credit Card not valid (Declined)\";  \n        }\n        K('button[Submit]').enable();\n\n        $(\"#errorValue\").html(message);\n        K('section[Card Error]').show();\n      } else {\n        K('section[Card Error]').hide();\n        K('field[customerBillingId]').value(response.data.customerBillingId);\n        K('field[Billing Customer Reference]').value(response.data.customerReference);\n        K('form').submitPage();\n      }\n    });        \n  }\n</script>  \n<style>\n.errorDetails {\n    background-color: red;\n    border-radius: 5px;\n    margin: 5px;\n}  \n.card-container {\n    background-color: rgb(240, 240, 240);\n    margin: auto;\n    width: calc(95%);\n\n    border: none;\n    border-radius: 4px;\n}\n.form-group {\n    flex: 0 0 auto;\n    flex-flow: column !important;\n}\n#checkout-form {\n    position: relative;\n    width: 400px;\n    padding: 10px;\n}\n\n#checkout-form label {\n    display: block;\n    min-height: 25px;\n\n    font-size: 15px;\n    font-weight: 500;\n    margin: 5px 0;\n    padding: 0;\n    color: red;\n}\n\n#card-number, #card-cvv, #card-expiry {\n    background-color: #FFF;\n    display: block;\n    width: calc(90%);\n    border-radius: 2px;\n    border: 1px solid rgba(200, 200, 200, 1);\n    padding: 14px 60px 13px 20px;\n    margin: auto;\n    transition: all 100ms ease-out;\n}\n\n/* card images are added to card number */\n#card-number {\n    background-image: none;\n\n    background-origin: content-box;\n    background-position: calc(100% + 40px) center;\n    background-repeat: no-repeat;\n    background-size: contain;\n}\n\n/* buttons */\n.btn {\n    vertical-align: top;\n}\n\n#pay-button {\n    position: relative;\n    border: none;\n    border-radius: 4px;\n    background-color: #0c384f;\n    color: rgba(255, 255, 255, 1);\n    display: inline-block;\n    transition: all 100ms ease-out;\n    padding: 11px 25px;\n    margin-left: 30px;\n}\n\n#pay-button:hover, #pay-button:active {\n    background-color: rgba(69, 36, 89, 1);\n}\n\n#pay-button:active {\n    box-shadow: inset 0 0 35px rgba(0, 0, 0, 0.3);\n}\n\n#pay-button:disabled {\n    background-color: rgba(255, 255, 255, 1);\n    border: 1px solid #0c384f;\n    color: #0c384f;\n}\n\n/* feedback is displayed after tokenization */\n#feedback {\n    position: relative;\n    left: 15px;\n    display: inline-block;\n    background-color: transparent;\n    border: 0px solid rgba(200, 200, 200, 1);\n    border-radius: 4px;\n    transition: all 100ms ease-out;\n    padding: 11px;\n}\n\n#feedback.error {\n    color: red;\n    border: 1px solid;\n}\n\n#feedback.success {\n    color: seagreen;\n    border: 1px solid;\n}\n</style>\n<style>\n\t.acceptTerms + label {\n    margin-left: 20px !important;\n\t}  \n  .hidden{\n   display:none; \n  }\nbody a {\n    color: #003b72;\n}  \nbutton.editButton {\n    border-radius: .25rem;\n    line-height: 1.0rem;\n    padding: .2rem 0.8rem;\n    margin-right: .5rem;\n    border: none;\n    color: #fff;\n    font-size: .75rem;\n    background-color: #0c384f;\n}\n</style>\n<script>\nvar termsInformation=\"\";\nfunction storeTermsAndConditions(){\n  \tvar startDate=K('field[The first instalment is due on]').value();\n  \tif (startDate!==null && startDate!==\"Invalid date\"){\n      startDate=moment(startDate,\"YYYY-MM-DD\").format(\"L\");\n      var termsInfo=termsInformation;\n      var schoolName=K('space').attributes('School Name');\n      if (schoolName.startsWith(\"GB \")){\n       schoolName=schoolName.replace(\"GB \",\"\"); \n      }\n      if (schoolName.startsWith(\"Gracie Barra \")){\n       schoolName=schoolName.replace(\"Gracie Barra \",\"\"); \n      }\n      var schoolLegalName=K('space').attributes('School Legal Name');\n      var schoolAddress=K('space').attributes('School Address');\n      var paymentFreq=K.translate(K('field[Payment Frequency]').value());\n      termsInfo=termsInfo.replaceAll(\"$school_name$\", schoolName);\n      termsInfo=termsInfo.replaceAll(\"$school_legal_name$\", schoolLegalName);\n      termsInfo=termsInfo.replaceAll(\"$school_address$\", schoolAddress);\n      termsInfo=termsInfo.replaceAll(\"$payment_period$\", paymentFreq);\n      \n      termsInfo=termsInfo.replaceAll(\"$start_date$\", startDate);\n      var freezeCharge=K('space').attributes('School Freeze Charge');\n      if (K('field[Payment Frequency]').value()===\"Fortnightly\"){\n        freezeCharge=\"&#163;\"+(parseFloat(freezeCharge)/2).toFixed(2);\n      } else {\n        freezeCharge=\"&#163;\"+freezeCharge;\n      }\n      termsInfo=termsInfo.replaceAll(\"$frozen_charge$\", freezeCharge);\n      \n      K('field[Terms Information Text]').value(termsInfo);  \n      $(\"#termsInformation\").html(termsInfo);\n    }\n}\nfunction toggleGBTermsAndCondition() {\n  \tdebugger;\n  if (K('form').reviewMode()) {\n\t\ttermsInformation=K('field[Terms Information Text]').value();  \n\t\t$(\"#termsInformation\").html(termsInformation); \n  } else {\n  \tstoreTermsAndConditions();\n  }\n  $('.gbterms').toggle('slow');\n}\nvar discounts;\nfunction completeTableChange(){\n  K('field[Family Member]').value(\"\");\n\t$(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(\"Select...\");  \t\t\t\t\n  K('field[Programs]').value(\"\");\n  K('field[tableMemberID]').value(\"\");\n  K('field[tableMemberName]').value(\"\");\n  K('field[tableProgram]').value(\"\");\n  K('field[tableFee]').value(\"\");\n  \n  // Sort table\n  viewerConfig.response.sort(function(a, b){return b.cost - a.cost});\n  // Let calculate the discounts\n  viewerConfig.response.forEach(function(item, index){\n    if (index<=discounts.length-1){\n      item.discount=discounts[index].discount;\n      item.fee=((new Number(item.cost))*discounts[index].cost).toFixed(2);\n    } else if (index>discounts.length-1 && discounts.length>0){\n      item.discount=discounts[discounts.length-1].discount;\n      item.fee=((new Number(item.cost))*discounts[discounts.length-1].cost).toFixed(2);\n    } else {\n    item.discount=\"0%\";\n    item.fee=((new Number(item.cost))).toFixed(2);\n    }\n  });\n  \n  // Set payment value\n  var total=0;\n  viewerConfig.response.forEach(function(item, index){\n\t\ttotal=total+(new Number((new Number(item.fee)).toFixed(2)));\n  });\n  K('field[I promise to pay equal FREQUENCY instalments of]').value(total);\n\n  global.viewerConfig.renderer.type($('#memberTableDiv'),global.viewerConfig);\n\n  $('#member-table tbody tr').on( 'click', function () {\n    if ( $(this).hasClass('selected') ) {\n      $(this).removeClass('selected');\n    }\n    else {\n      $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n      $(this).addClass('selected');\n    }\n  } );  \n  K('field[feesJSON]').value(JSON.stringify(viewerConfig.response));\n\n  members=new Array();\n  viewerConfig.response.forEach(function(item){\n    members.push(item.id);\n  });\n  K('field[membersJSON]').value(JSON.stringify(members));  \n}  \n  \nfunction memberProgramAdded(memberID, feeProgram) {\n  found=false;\n\n  viewerConfig.response.forEach(function(item){\n      if (item.id===memberID && item.feeProgram===feeProgram) {\n        found=true;\n      }\n  });  \n  return found;\n}\n</script>\n<script>\nfunction enabledAddressEdit(){\n  K('field[Address]').enable();\n  K('field[Suburb]').enable();\n  K('field[State]').enable();\n  K('field[Postcode]').enable();\n}\nfunction geolocate() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      var geolocation = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      var circle = new google.maps.Circle(\n          {center: geolocation, radius: position.coords.accuracy});\n      autocomplete.setBounds(circle.getBounds());\n    });\n  }\n}\nfunction fillInAddress() {\n  K(\"field[Address]\").value(\"\");\n\n  // Get the place details from the autocomplete object.\n  var place = autocomplete.getPlace();\n\ndebugger;\n  // Get each component of the address from the place details,\n  // and then fill-in the corresponding field on the form.\n  for (var i = 0; i < place.address_components.length; i++) {\n    var addressType = place.address_components[i].types[0];\n\n    if (addressType===\"street_number\") {\n    \tK(\"field[Address]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"route\") {\n    \tK(\"field[Address]\").value(K(\"field[Address]\").value()+\" \"+place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"locality\") {\n    \tK(\"field[Suburb]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"administrative_area_level_1\") {\n    \tK(\"field[State]\").value(place.address_components[i][\"short_name\"]);\n    }\n    if (addressType===\"postal_code\") {\n    \tK(\"field[Postcode]\").value(place.address_components[i][\"short_name\"]);\n    }\n    if (addressType===\"country\") {\n    \tK(\"field[Country]\").value(place.address_components[i][\"long_name\"]);\n    }\n  }\n}  \nfunction initAutocomplete() {\n  debugger;\n  if (document.getElementById('autocomplete')!==undefined) {\n    // Create the autocomplete object, restricting the search predictions to\n    // geographical location types.\n    try {\n      if (document.getElementById('autocomplete')!==null) {\n\t      autocomplete = new google.maps.places.Autocomplete(\n          document.getElementById('autocomplete'), {types: ['geocode']});\n\n  \t    // Avoid paying for data that you don't need by restricting the set of\n    \t  // place fields that are returned to just the address components.\n      \tautocomplete.setFields(['address_component']);\n\n      \t// When the user selects an address from the drop-down, populate the\n      \t// address fields in the form.\n      \tautocomplete.addListener('place_changed', fillInAddress);\n      }\n    } catch (e) {\n    \tconsole.log(\"Error handling autocompete\");\n    }\n  }\n}  \n</script>\n\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyANn8OeuTR-YH0f-l7S-Qk04cROra8iUfM&libraries=places&callback=initAutocomplete\"\n        async defer>\n</script>",
  "description": "Member payment registration form. Use to initiate a scheduled payment or alter an existing schedule of payments.",
  "name": "Stripe Member Registration",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "Current Registration",
          "title": "",
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "registrations",
              "text": "<div>\n  <table>\n    <tbody  id=\"registrationsTableBody\">      \n    </tbody>\n  </table>\n</div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Not to be Completed",
          "title": null,
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "MessageOne",
              "text": "<p>This form must be initiated by the a Gracie Barra Representative.</p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Invalid Member",
          "title": null,
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Message",
              "text": "<p>This Member Registration form was not intended for you to complete. Please contact your GB School to inform them of the mistake.</p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Select Member",
          "title": "Select Member",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Members",
              "label": "Members",
              "key": "f38",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('Member ID')===null",
              "requiredMessage": "A member must be selected",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Members",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('bridgedResource[Get Member]').load({\n  attributes: ['Member ID', 'First Name', 'Last Name'],\n  values: {'ID' : 'Allen'},\n  success: function(bridgedData) {\n debugger;   \n    if (bridgedData===null) return;\n    K('field[Member GUID]').value(bridgedData['id']);\n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[Birthday]').value(bridgedData['DOB']);\n    K('field[Billing Customer Reference]').value(bridgedData['Billing Customer Reference']);\n    K('section[Current Registration]').show();\n    \n    if ($(K(\"form\").find(\"#firstinstallmentdate\")[0]).html()===\"\") {\n      var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n      bundle.config.widgets.xdsoftDatepicker({\n        element: K(\"form\").find(\"#firstinstallmentdate\")[0],\n        timepicker: false,\n        displayDateFormat: \"MM/DD/YYYY\",\n        options: {\n          startDate: tomorrow,\n          minDate: 0,\n          formatDate:\"d-m-Y\",\n          validateOnBlur:false\n        },\n        onSelectDate:function(ct,$i){\n          K('field[The first instalment is due on]').value(ct.dateFormat('YYYY-MM-DD'));\n        },\n        onGenerate: function( ct ){\n                $('.xdsoft_today')\n                .addClass('xdsoft_disabled');\n  /*              $('.xdsoft_date.xdsoft_weekend')\n                .addClass('xdsoft_disabled'); */\n            }\n      });          \n    }\ndebugger;        \n    K('bridgedResource[Get Stripe Member Registrations]').load({\n      attributes: ['id'],\n      values: {},\n      success: function(bridgedData) {\n        debugger;\n        if (bridgedData.length===0 && !form('review')) {    \n          K('section[Student Information]').show();\n          K('section[Current Registration]').hide();\n        } else if (bridgedData.length===1 && bridgedData[0].coreState===\"Draft\" && !form('review')) {\n          if (document.documentURI.split(\"stripe-member-registration\")[1]===\"\"){\n            var html=\"\";\n\n            html=html+\"<tr><td><p>Click <a href='/#/kapps/services/categories/stripe-billing/stripe-member-registration/\"+bridgedData[0].id+\"'>here</a> to complete your Member Registration form.</td></tr>\";\n            $(\"#registrationsTableBody\").html(html);\n            K('section[Current Registration]').show();\n            K('section[Student Information]').hide();\n            K('section[Program Information]').hide();\n            K('section[Accept Terms and Conditions]').hide();\n            K('section[Signatures]').hide();\n            K('section[Select Member]').show();\n            K('button[Save for Member to Complete]').hide();\n            K('button[Submit Button]').hide();\n          } else {\n            K('section[Student Information]').show();\n            K('section[Current Registration]').hide();          \n          }\n        } else if (!form('review')) {\n          var html=\"\";\n          html=html+\"<tr><td>This member already has a Stripe Member Registration.<br>To change billing details for this member please complete a <a href='/#/kapps/services/categories/stripe-billing/stripe-setup-biller-details?id=\"+K('field[Member GUID]').value()+\"'>Stripe Biller Details</a> form.</td></tr>\";\n\n          $(\"#registrationsTableBody\").html(html);\n          K('section[Current Registration]').show();\n          K('section[Student Information]').hide();\n          K('section[Program Information]').hide();\n          K('section[Accept Terms and Conditions]').hide();\n          K('section[Signatures]').hide();\n          K('section[Select Member]').show();\n          K('button[Save for Member to Complete]').hide();\n          K('button[Submit Button]').hide();\n        }\n      }\n    })\n  }\n});",
                  "bridgedResourceName": null,
                  "runIf": "values('Members')!==null"
                },
                {
                  "name": "Clear Member Details",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('field[Member ID]').value(\"\");\nK('field[Student First Name]').value(\"\");\nK('field[Student Last Name]').value(\"\");\nK('field[Billing Customer Reference]').value(\"\");\nK('section[Student Information]').hide();\nK('section[Program Information]').hide();\nK('section[Accept Terms and Conditions]').hide();\nK('section[Signatures]').hide();\n\nK('section[Member Select Space]').show();    \n",
                  "runIf": "values('Members')===null && !form('review')"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [

              ]
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Select",
              "text": "<div id=\"selectMemberMenu\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Student Information",
          "title": "Student Information",
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Member ID",
              "label": "Member ID",
              "key": "f39",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member GUID",
              "label": "Member GUID",
              "key": "f60",
              "defaultValue": "${resources('Get Member by Username:id')}",
              "defaultResourceName": "Get Member by Username",
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student First Name",
              "label": "Student's First Name",
              "key": "f28",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student Last Name",
              "label": "Student's Last Name",
              "key": "f29",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested For",
              "label": "Requested For",
              "key": "f66",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Co-Signer Full Name",
              "label": "Co-Signer's Full Name",
              "key": "f30",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Birthday",
              "label": "DOB",
              "key": "f61",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Family Members",
              "title": "Family Members",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Include Family Members",
                  "label": "Include Family Members",
                  "key": "f44",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Program Information",
          "title": "Program Information",
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Payment Frequency",
              "label": "Payment Frequency",
              "key": "f40",
              "defaultValue": "Fortnightly",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Frequency Label",
                  "type": "Change",
                  "action": "Custom",
                  "code": "value=K('field[I promise to pay equal FREQUENCY instalments of]').name();\nvalue=value.replace(\"FREQUENCY\", K.translate(K('field[Payment Frequency]').value()));\n$(K('field[I promise to pay equal FREQUENCY instalments of]').wrapper()).find(\"label\").html(value);\n\nif (K('field[Payment Frequency]').value()!==null) {\n\t$(\"#paymentType\").html(K.translate(K('field[Payment Frequency]').value().replaceAll(\"ly\",\"\").toLowerCase()));\n}",
                  "runIf": ""
                },
                {
                  "name": "Set Fees",
                  "type": "Change",
                  "action": "Custom",
                  "code": "/*if (K('field[Payment Frequency]').value()===\"Daily\"){\n  K('field[Admin Fee]').value(\"0.10\");\n} else if (K('field[Payment Frequency]').value()===\"Weekly\"){\n  K('field[Admin Fee]').value(\"0.50\");\n//  K('field[Setup Fee]').value(\"5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Fortnightly\"){\n  K('field[Admin Fee]').value(\"0.99\");\n//  K('field[Setup Fee]').value(\"5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Monthly\"){\n  K('field[Admin Fee]').value(\"1.99\");\n//  K('field[Setup Fee]').value(\"5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Quarterly\"){\n  K('field[Admin Fee]').value(\"5.99\");\n//  K('field[Setup Fee]').value(\"5.50\");\n}*/\n/*K('field[Admin Fee]').value(\"1.33%\");*/\n",
                  "runIf": "values('Payment Frequency')!==null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Daily",
                  "value": "Daily"
                },
                {
                  "label": "Weekly",
                  "value": "Weekly"
                },
                {
                  "label": "Fortnightly",
                  "value": "Fortnightly"
                },
                {
                  "label": "Monthly",
                  "value": "Monthly"
                },
                {
                  "label": "Quarterly",
                  "value": "Quarterly"
                }
              ]
            },
            {
              "type": "field",
              "name": "Family Member",
              "label": "Family Member",
              "key": "f48",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Include Family Members')===\"Yes\" && !form('review')",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Family Member",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableMemberName",
                      "value": "${resources('Get Family Member:First Name')} ${resources('Get Family Member:Last Name')}",
                      "visible": true
                    },
                    {
                      "field": "tableMemberID",
                      "value": "${resources('Get Family Member:id')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Family Member"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Members:First Name')} ${resources('Members:Last Name')}",
                "value": "${resources('Members:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableMemberID",
              "label": "tableMemberID",
              "key": "f50",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableMemberName",
              "label": "tableMemberName",
              "key": "f49",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Programs",
              "label": "Programs",
              "key": "f45",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Frequency')!==null && !form('review') && K(\"identity\").teams.includes(\"Role::Program Managers\")",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Program",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableProgram",
                      "value": "${resources('Get Program:Program')} - ${resources('Get Program:Info')}",
                      "visible": true
                    },
                    {
                      "field": "tableFee",
                      "value": "${resources('Get Program:Fee')}",
                      "visible": true
                    },
                    {
                      "field": "tableFeeProgram",
                      "value": "${resources('Get Program:Program')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Program"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Program Fees",
              "choicesRunIf": "",
              "choices": {
                "label": "${resources('Program Fees:Program')} - ${resources('Program Fees:Info')}",
                "value": "${resources('Program Fees:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableProgram",
              "label": "tableProgram",
              "key": "f47",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFeeProgram",
              "label": "tableFeeProgram",
              "key": "f53",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFee",
              "label": "tableFee",
              "key": "f46",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Add buttons",
              "title": null,
              "visible": "values('Include Family Members')!==null",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "button",
                  "label": "Add My Program",
                  "name": "Add Current Member",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Set Current Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "K('field[tableMemberID]').value(K('field[Members]').value());\nK('field[tableMemberName]').value(K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value());\nDataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();",
                      "runIf": "values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[Members]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Add Family Member Program",
                  "name": "Add Family Member Program",
                  "visible": "values('Include Family Members')===\"Yes\"",
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Add Family Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "DataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();\n",
                      "runIf": "K('field[Family Member]').value()!==null && values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[tableMemberID]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Delete Selected Program",
                  "name": "Delete Selected Program",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Delete Selected Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "viewerConfig.response.splice([$('#member-table').DataTable().row('.selected').index()],1);\ncompleteTableChange();",
                      "runIf": "$('#member-table tbody tr.selected').length>0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Table",
              "text": "<div id='memberTableDiv'></div>",
              "visible": "values('Include Family Members')!==null",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "membersJSON",
              "label": "membersJSON",
              "key": "f52",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "feesJSON",
              "label": "feesJSON",
              "key": "f51",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "I promise to pay equal FREQUENCY instalments of",
              "label": "I promise to pay equal FREQUENCY instalments of",
              "key": "f31",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Frequency')!=null",
              "enabled": true,
              "required": "values('Payment Frequency')!=null",
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": {
                "regex": "^-?\\d*(.\\d+)?$",
                "message": "Please enter a valid decimal value"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "The first instalment is due on HTML",
              "text": "<div class=\"form-group required\" linkedField=\"The first instalment is due on\">  \n  <label class=\"field-label\" for=\"firstinstallmentdate\">to <span class='schoolName'></span>. The first instalment is due on</label>\n  <div id=\"firstinstallmentdate\"></div>\n</div>",
              "visible": "!form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "The first instalment is due on",
              "label": "to <span class='schoolName'></span>. The first instalment is due on",
              "key": "f32",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "form('review')",
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Invalid date",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('field[The first instalment is due on]').value(\"\");",
                  "runIf": "K('field[The first instalment is due on]').value()===\"Invalid date\""
                },
                {
                  "name": "test",
                  "type": "Change",
                  "action": "Custom",
                  "code": "startDate=K('field[The first instalment is due on]').value();"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Payline information description",
              "text": "and subsequent instalments are to be paid each <span id=\"paymentType\">fortnight</span> afterwards until I give notice that I wish to stop payments according to the terms and conditions including cancellation and membership freeze terms below.",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Admin Fee",
              "label": "Admin Fee",
              "key": "f41",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Setup Fee",
              "label": "Setup Fee",
              "key": "f42",
              "defaultValue": "0",
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Instalment Signature",
              "text": "<label class=\"field-label required\">Instalment Signature</label>\n<div id=\"installment-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Instalment Signature",
              "label": "Encoded Instalment Signature",
              "key": "f33",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": "K('field[Members]').value()!==\"\"",
              "required": true,
              "requiredMessage": "Instalment Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Accept Terms and Conditions",
          "title": null,
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Accept Gracie Barra Terms and Conditions",
              "label": "Gracie Barra <a href=\"javascript:toggleGBTermsAndCondition()\">Terms and Conditions</a>",
              "key": "f58",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Gracie Barra Terms and Conditions",
                  "value": "Accept Gracie Barra Terms and Conditions"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Terms",
              "title": "",
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
                "class": "gbterms"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Terms Information Text",
                  "label": "Terms Information Text",
                  "key": "f56",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Terms Information",
                  "text": "<span id=\"termsInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "field",
              "name": "Accept Stripe Terms and Conditions",
              "label": "Stripe <a href=\"javascript:$(K('section[Stripe Terms]').element()).toggle('slow')\">Terms and Conditions</a>",
              "key": "f59",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Stripe Terms and Conditions",
                  "value": "Accept Stripe Terms and Conditions"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Stripe Terms",
              "title": "",
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Stripe Terms Information Text",
                  "label": "Stripe Terms Information Text",
                  "key": "f57",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Stripe Terms Information",
                  "text": "<span id=\"stripeTermsInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Signatures",
          "title": null,
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Term Date",
              "label": "Term Date",
              "key": "f34",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Gracie Barra Rep Signature",
              "text": "<label class=\"field-label required\">Gracie Barra Representative Signature</label><div id=\"gbrepresentative-signature-canvas\"/>",
              "visible": false,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Gracie Barra Rep Signature",
              "label": "Encoded Gracie Barra Rep Signature",
              "key": "f35",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Student Signature",
              "text": "<label class=\"field-label required\">Student Signature</label>\n<div id=\"student-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Student Signature",
              "label": "Encoded Student Signature",
              "key": "f36",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "Student Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Parent Signature",
              "text": "<label class=\"field-label required\">Parent Signature</label>\n<div id=\"parent-signature-canvas\"/>",
              "visible": "moment().diff(moment(K('field[Birthday]').value(), \"YYYY-MM-DD\"),\"years\")<18",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Parent Signature",
              "label": "Encoded Parent Signature",
              "key": "f37",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Member Select Space",
          "title": null,
          "visible": "values('Include Family Members')===null",
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Select Space",
              "text": "<div style=\"height:300px\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "button",
          "label": "Save for Member to Complete",
          "name": "Save for Member to Complete",
          "visible": true,
          "enabled": "values('I promise to pay equal FREQUENCY instalments of')!==null && values('The first instalment is due on')!==null && values('Term Date') !== null",
          "renderType": "save",
          "renderAttributes": {
          }
        },
        {
          "type": "button",
          "label": "Next",
          "name": "Submit Button",
          "visible": true,
          "enabled": true,
          "renderType": "submit-page",
          "renderAttributes": {
          }
        }
      ],
      "events": [
        {
          "name": "Load Signatures",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#installment-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Instalment Signature]\").value(),\n  onChange: function(value) {\n\t  K(\"field[Encoded Instalment Signature]\").value(value);\n\t},\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.representativeSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#gbrepresentative-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Gracie Barra Rep Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Gracie Barra Rep Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.representativeSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#student-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Student Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Student Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.studentSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#parent-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Parent Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Parent Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.parentSignaturePad = el;\n  },\n});\n\n",
          "runIf": ""
        },
        {
          "name": "Load Members Select",
          "type": "Load",
          "action": "Custom",
          "code": "discounts=(K('space').attributes('Member Discounts')!==undefined ? JSON.parse(K('space').attributes('Member Discounts')) : []);  \n\ndebugger;\nif (GetURLParameter(\"id\")!==null && GetURLParameter(\"id\")!==undefined){\n  K('field[Member GUID]').value(GetURLParameter(\"id\"));\n}\nK('bridgedResource[Get Stripe Member Registrations]').load({\n  attributes: ['id'],\n  values: {},\n  success: function(bridgedData) {\n    debugger;\n    if ((GetURLParameter(\"id\")!==null && GetURLParameter(\"id\")!==undefined) || (bridgedData.length===0 && !form('review'))) {\n      if (bridgedData.length!==0 && !form('review')) {\n        window.location=\"/#/kapps/services/categories/stripe-billing/stripe-member-registration/\"+bridgedData[0].id;\n        return;\n      } else {\n  \t\t\tif (!K(\"identity\").teams.includes(\"Role::Program Managers\")) {\n          K('section[Select Member]').hide();\n          K('section[Not to be Completed]').show();\n          K('button[Save for Member to Complete]').hide();\n          K('button[Submit Button]').hide();        \n        } else {      \n          K('bridgedResource[Members]').load({  \n            attributes: ['First Name', 'Last Name','id'],\n            values: {},\n            success: function(bridgedData) {\n              var options=[];\n              $.each( bridgedData, function( key, value ) {\n                console.log(value['id']+\"-\"+value['First Name']+\" \"+value['Last Name']);\n                options[options.length]={'label':value['First Name']+\" \"+value['Last Name'], 'value':value['id']};\n              });\n              var label=null;\n              debugger;   \n              K('field[Members]').options(options);\n              if (GetURLParameter(\"id\")!==null && GetURLParameter(\"id\")!==undefined) {\n                K('field[Members]').value(GetURLParameter(\"id\"));\n                $(K('field[Members]').options()).each(function(index) {\n                  if (K('field[Members]').options()[index].value===GetURLParameter(\"id\")) {\n                    label=K('field[Members]').options()[index].label;\n                  \t$(K(\"form\").find(\"#selectMemberMenu [class$='placeholder']\")).html(label);\n                  }\n                });      \n              } else {            \n                if (!K(\"identity\").teams.includes(\"Role::Program Managers\")) {\n                  K('field[Members]').value(K('field[Member GUID]').value());\n                  $(K('field[Members]').options()).each(function(index) {\n                   if (K('field[Members]').options()[index].value===K('field[Member GUID]').value()) {\n                    label=K('field[Members]').options()[index].label;\n                    }\n                  });      \n                }\n              }\n              bundle.config.widgets.selectMenu({\n                element: K(\"form\").find(\"#selectMemberMenu\")[0],\n                options: K('field[Members]').options(),\n                onChange: function(option) {\n                  K('field[Members]').value(option.value);\n                  setTimeout(function(){\n  \t\t\t\t\t\t    \t$(K(\"form\").find(\"#selectMemberMenu [class$='placeholder']\")).html(option.label);\n                  },100);\n                },\n                value: K('field[Members]').value(),\n              });\n  /*            bundle.config.widgets.selectMenu({\n                element: K(\"form\").find(\"#selectFamilyMemberMenu\")[0],\n                options: K('field[Family Member]').options(),\n                onChange: function(option) {\n                  K('field[Family Member]').value(option.value);\n                  setTimeout(function(){\n                    $(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(option.label);\n                  },100);\n                },\n                value: K('field[Family Member]').value(),\n              }); */\n              \n            }\n          });\n        }\n      }\n    } else {\n      debugger;\n      if (!form('review')) {\n        var html=\"\";\n        bridgedData.forEach(elem => {\n          if (elem['Payment Method']===\"\") {\n            html=html+\"<tr><td><p>Click <a href='/#/kapps/services/categories/stripe-billing/stripe-member-registration/\"+elem.id+\"'>here</a> to complete your Member Registration form.</td></tr>\";\n          } else {\n            html=html+\"<tr><td><p>Click <a href='/#/kapps/services/requests/request/\"+elem.id+\"/review'>here</a> to view your Member Registration form.</td></tr>\";\n          }\n        });\n        $(\"#registrationsTableBody\").append(html);\n        K('section[Current Registration]').show();\n        K('section[Select Member]').hide();\n        K('button[Save for Member to Complete]').hide();\n        K('button[Submit Button]').hide();\n      } else {        \n      }\n    }\n  }\n});\n",
          "runIf": "values('Member ID')===null"
        },
        {
          "name": "Handle Errors",
          "type": "Submit",
          "action": "Custom",
          "code": "storeTermsAndConditions();\n\nif (!jQuery.isEmptyObject(K('form').validate())){\n  setTimeout(function(){\n  if ($(\".has-error\").length>0){\n    $(\".has-error\").each(function(i,l) { \n      if ($(l).attr(\"data-element-name\").indexOf(\"Signature\")!==-1) {\n        sigCanElName=$(l).attr(\"data-element-name\").replace(\"Encoded \",\"\");\n        $(K('content['+sigCanElName+']').element()).addClass(\"has-error\");\n      }\n    })  \n    $('.main-container').animate({\n      scrollTop: 0\n    },500);\n  }\n  },100);\n}"
        },
        {
          "name": "Load Previous set page",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nvar options=[];\noptions[options.length]={'label':K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value(), 'value':K('field[Member GUID]').value()};\nK('field[Members]').options(options);\nK('field[Members]').value(K('field[Member GUID]').value());\n\nK('section[Student Information]').show();\nK('section[Program Information]').show();\n\nK('section[Member Select Space]').hide();    \n",
          "runIf": "values('Member ID')!==null"
        },
        {
          "name": "Set Payment Frequencies",
          "type": "Load",
          "action": "Custom",
          "code": "options=[];\nvar freqValue=K('field[Payment Frequency]').value();\nK('space').attributes('Payment Frequencies').split(\",\").forEach(function(value) {\n\toptions[options.length]={'label':value,'value':value};\n});\nK('field[Payment Frequency]').options(options);\nsetTimeout(function() { K('field[Payment Frequency]').value(freqValue); }, 100, freqValue);\n\nif (form('review')) K('field[Payment Frequency]').disable();",
          "runIf": ""
        },
        {
          "name": "Load Members Table",
          "type": "Load",
          "action": "Custom",
          "code": "global.viewerConfig ={\n  resultsContainer:\n  '<table cellspacing=\"0\", border=\"0\", class=\"table table-striped table-bordered table-condensed dataTable\">',\n  data: [\n  {\n  title: 'MemberID',\n  name: 'id',\n  setField: 'tableMemberID',\n  class: 'hidden'\n  },\n  {\n  title: 'Name',\n  name: 'Name',\n  setField: 'tableMemberName'\n  },\n  {\n  title: 'Fee Program',\n  name: 'feeProgram',\n  setField: 'tableFeeProgram',\n  class: 'hidden'\n  },\n  {\n  title: 'Program',\n  name: 'program',\n  setField: 'tableProgram'\n  },\n  {\n  title: 'Fee',\n  name: 'fee',\n  setField: 'tableFee'\n  },\n  {\n  title: 'Cost',\n  name: 'cost',\n  class: 'hidden',\n  setField: 'tableFee'\n  },\n\t{\n  title: 'Discount',\n  name: 'discount',\n  setField: 'tableDiscount'\n  },\n],\n  resultsContainerId: 'member-table',\n  before: function(configObj) {\n\n  },\n  error: function(configObj) {},\n  complete: function(configObj) {\n\n  },\n  removeOnClick: false,\n  renderer: {\n  type: DataViewer.Renderers.DataTables, // Passing a function here allows for better customization\n  options: {\n  // Options for Render\n  processSingleResult: false,\n  // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n  // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n  responsive: false,\n  dom: 'tip',\n  orderFixed: [[4, 'desc']], /* Fee */\n  paging: false,\n  scrollY: '60vh',\n  scrollCollapse: true,\n  select: {\n  \tstyle: 'single',\n\t\tselector: 'td:first-child'\n\t},\n  createdRow: function createdRow(row, data, dataIndex) {\n\n  },\n\tdeferRender: true,\n}\n}\n};\nviewerConfig.response = (K('field[feesJSON]').value()===null ? [] : JSON.parse(K('field[feesJSON]').value()));\nDataViewer.renderResults($('#memberTableDiv'), viewerConfig);\n\n"
        },
        {
          "name": "Embed School Names",
          "type": "Load",
          "action": "Custom",
          "code": "$(\".schoolName\").html(K('space').attributes('School Name'));\n$(\".legalName\").html(K('space').attributes('School Legal Name'));\n$(\".schoolEmail\").html(K('space').attributes('School Email'));\n\n"
        },
        {
          "name": "Load Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Terms and Conditions]').load({\n  success: function(bridgedData) {\n    debugger;\n    termsInformation=bridgedData[0][\"Terms Information\"];\n    var termsInfo=termsInformation;\n    K('field[Terms Information Text]').value(termsInfo);\n    $(\"#termsInformation\").html(termsInfo);\n  }\n});\n",
          "runIf": "!form('review')"
        },
        {
          "name": "Display Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "",
          "runIf": "form('review')"
        },
        {
          "name": "Load Stripe Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Stripe Terms and Conditions]').load({\n  success: function(bridgedData) {\n    debugger;\n    K('field[Stripe Terms Information Text]').value(bridgedData[0][\"Terms Information\"]);\n    $(\"#stripeTermsInformation\").html(bridgedData[0][\"Terms Information\"]);\n  }\n});\n",
          "runIf": "K('field[Stripe Terms Information Text]').value()===null"
        },
        {
          "name": "Display Stripe Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "$(\"#stripeTermsInformation\").html(K('field[Stripe Terms Information Text]').value());",
          "runIf": "K('field[Stripe Terms Information Text]').value()!==null"
        },
        {
          "name": "Member User Load",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nif (!K(\"identity\").teams.includes(\"Role::Program Managers\")) {\n  if (K('field[Member ID]').value().toLowerCase()!==K(\"identity\").username) {\n    K('section[Select Member]').hide();\n    K('section[Invalid Member]').show();\n    K('section[Student Information]').hide();  \n    K('section[Program Information]').hide();\n    K('section[Accept Terms and Conditions]').hide();\n    K('section[Signatures]').hide();\n    K('section[Signatures]').hide();\n\t\tK('button[Save for Member to Complete]').hide();\n    K('button[Submit Button]').hide();\n  } else {\n    K('section[Select Member]').hide();\n    K('section[Student Information]').show();  \n    if (K('field[Members]').value()!==\"\") {\n      K('field[Co-Signer Full Name]').disable();\n      K('field[Include Family Members]').disable();\n      K('field[Payment Frequency]').disable();\n      K('field[Term Date]').disable();\n      K('field[Programs]').hide();\n      K('section[Add buttons]').hide();\n      K('field[I promise to pay equal FREQUENCY instalments of]').disable();\n      K('content[The first instalment is due on HTML]').hide();\n      K('field[The first instalment is due on]').disable();\n      K('field[The first instalment is due on]').show();\n      K('button[Save for Member to Complete]').hide();\n    }\n  }\n} else {\n    K('section[Select Member]').hide();\n    K('section[Student Information]').show();  \n  \n    if ($(K(\"form\").find(\"#firstinstallmentdate\")[0]).html()===\"\") {\n      var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n      bundle.config.widgets.xdsoftDatepicker({\n        element: K(\"form\").find(\"#firstinstallmentdate\")[0],\n        timepicker: false,\n        displayDateFormat: \"DD/MM/YYYY\",\n        options: {\n          startDate: tomorrow,\n          minDate: 0,\n          formatDate:\"d-m-Y\",\n          validateOnBlur:false\n        },\n        onSelectDate:function(ct,$i){\n          debugger;\n          K('field[The first instalment is due on]').value(ct.dateFormat('YYYY-MM-DD'));\n        },\n        onGenerate: function( ct ){\n              $('.xdsoft_today')\n                .addClass('xdsoft_disabled');\n              $('.xdsoft_date.xdsoft_weekend')\n                .addClass('xdsoft_disabled');\n          \t\t$(\".datetimepicker input\").val(moment(K('field[The first instalment is due on]').value(),\"YYYY-MM-DD\").format(\"DD/MM/YYYY\"));\n            }\n      });     \n    }\n}",
          "runIf": "values('Member ID')!==null && !form('review')"
        },
        {
          "name": "Review",
          "type": "Load",
          "action": "Custom",
          "code": "K('section[Student Information]').show();  \ntoggleGBTermsAndCondition();\n$(\"b\").each( function() {\n    $(this).replaceWith( $(\"<span style='font-weight:bold;'>\").html( $(this).html() ) );\n});",
          "runIf": "form('review')"
        }
      ],
      "name": "Instalment Information",
      "renderType": "submittable",
      "type": "page"
    },
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "Member Details",
          "title": "Billing Details",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "field",
              "name": "First Name",
              "label": "First Name",
              "key": "f1",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^(?=.{1,50}$)[a-zA-Z0-9]+(?:['-_.\\s][a-zA-Z0-9]+)*$",
                "message": "First name should be between 1 to 50 characters long and should contain valid characters"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Last Name",
              "label": "Last Name",
              "key": "f2",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^(?=.{1,40}$)[a-zA-Z0-9]+(?:['-_.\\s][a-zA-Z0-9]+)*$",
                "message": "Last name should be between 1 to 40 characters long and should contain valid characters"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Autocomplete",
              "text": "<div id=\"locationField\">\n  <input id=\"autocomplete\"\n         class=\"form-control\"\n         placeholder=\"Enter your address\"\n         onFocus=\"geolocate()\"\n         type=\"text\"/>\n</div>",
              "visible": "!form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Address",
              "label": "Address<button class=\"editButton\"  onclick=\"enabledAddressEdit()\">Manually Enter</button>",
              "key": "f3",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "!form('review')",
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": {
                "regex": "^(.){5,50}$",
                "message": "Address should be between 5 to 50 characters long"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Suburb",
              "label": "Suburb",
              "key": "f4",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^(.){2,30}$",
                "message": "Suburb should be between 2 to 30 characters long"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Postcode",
              "label": "Postcode",
              "key": "f5",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Country",
              "label": "Country",
              "key": "f55",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "State",
              "label": "State",
              "key": "f6",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [

              ]
            },
            {
              "type": "field",
              "name": "Mobile",
              "label": "Mobile",
              "key": "f21",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "DOB",
              "label": "DOB",
              "key": "f7",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [
                {
                  "content": "new Date(values('DOB')). getFullYear()>1900",
                  "message": "DOB Must be a year greater than 1900"
                }
              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "field",
              "name": "Drivers Licence",
              "label": "Drivers Licence",
              "key": "f8",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": {
                "regex": "^([a-zA-Z0-9]){4,25}$",
                "message": "Drivers licence should be alphanumeric string between 4 to 25 characters"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Email",
              "label": "Email",
              "key": "f9",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "[A-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?$",
                "message": "Email should be a valid email address"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Payment Details",
          "title": "Payment Details",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "field",
              "name": "Billing Period",
              "label": "Billing Period",
              "key": "f43",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Payment",
              "label": "Payment",
              "key": "f11",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^\\d+(\\.\\d{1,2})?$",
                "message": "Payment should be valid number with maximum 2 decimal places"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "First Payment",
              "label": "First Payment",
              "key": "f12",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": {
                "regex": "^\\d+(\\.\\d{1,2})?$",
                "message": "First payment should be valid number with maximum 2 decimal places"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Start Date",
              "label": "Billing Start Date",
              "key": "f13",
              "defaultValue": "",
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "field",
              "name": "Payment Method",
              "label": "Payment Method",
              "key": "f22",
              "defaultValue": "Credit Card",
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Load Card",
                  "type": "Change",
                  "action": "Custom",
                  "code": "cardElement = elements.create('card', {hidePostalCode: true});\ncardElement.mount('#card-element');\ncardElement.on('change', function(event) {\n  debugger;\n\tif (event.complete) {\n     K('field[Payment Method Complete]').value(\"COMPLETED\");\t\t\n  } else {\n     K('field[Payment Method Complete]').value(\"\");\t\t\n  }\n});",
                  "runIf": "cardElement===null"
                },
                {
                  "name": "Load Bank Account(EU)",
                  "type": "Change",
                  "action": "Custom",
                  "code": "// Custom styling can be passed to options when creating an Element.\nvar style = {\n  base: {\n    color: '#32325d',\n    fontSize: '16px',\n    '::placeholder': {\n      color: '#aab7c4'\n    },\n    ':-webkit-autofill': {\n      color: '#32325d',\n    },\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a',\n    ':-webkit-autofill': {\n      color: '#fa755a',\n    },\n  },\n};\nvar options = {\n  style: style,\n  supportedCountries: ['SEPA'],\n  // Elements can use a placeholder as an example IBAN that reflects\n  // the IBAN format of your customer's country. If you know your\n  // customer's country, we recommend that you pass it to the Element as the\n  // placeholderCountry.\n  placeholderCountry: 'DE',\n};\n\n// Create an instance of the IBAN Element\niban = elements.create('iban', options);\n\n// Add an instance of the IBAN Element into the `iban-element` <div>\niban.mount('#iban-element');\niban.on('change', function(event) {\n  debugger;\n\tif (event.complete) {\n     K('field[Payment Method Complete]').value(\"COMPLETED\");\t\t\n  } else {\n     K('field[Payment Method Complete]').value(\"\");\t\t\n  }\n});",
                  "runIf": "values('Payment Method')===\"Bank Account(EU)\" "
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Credit Card",
                  "value": "Credit Card"
                },
                {
                  "label": "Bank Account(EU)",
                  "value": "Bank Account(EU)"
                }
              ]
            },
            {
              "type": "field",
              "name": "Payment Method Complete",
              "label": "Payment Method Complete",
              "key": "f67",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Credit Card Details",
          "title": "Credit Card Details",
          "visible": "values('Payment Method') === 'Credit Card'",
          "omitWhenHidden": true,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Credit Card Capture",
              "text": "\n<!--\n  Or create a <label> with a 'for' attribute,\n  referencing the ID of your container.\n-->\n<label for=\"card-element\"></label>\n<div id=\"card-element\"></div>\n",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Credit Card Number",
              "label": "Credit Card Number",
              "key": "f15",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": {
                "regex": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11}|^...[0-9][0-9][0-9][0-9])$",
                "message": "Credit card number should be a valid CC number"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Credit Card Expiry Month",
              "label": "Credit Card Expiry Month",
              "key": "f63",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Credit Card Expiry Year",
              "label": "Credit Card Expiry Year",
              "key": "f64",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "CVV",
              "label": "CVV",
              "key": "f62",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Bank Account Details EU",
          "title": "Bank Account Details",
          "visible": "values('Payment Method')===\"Bank Account(EU)\"",
          "omitWhenHidden": false,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Bank Account Capture",
              "text": "   <!--\n      Using a label with a for attribute that matches the ID of the\n      Element container enables the Element to automatically gain focus\n      when the customer clicks on the label.\n    -->\n    <label for=\"iban-element\">\n      IBAN\n    </label>\n    <div id=\"iban-element\">\n      <!-- A Stripe Element will be inserted here. -->\n    </div>\n  </div>\n\n  <!-- Display mandate acceptance text. -->\n  <div id=\"mandate-acceptance\">\n    By providing your payment information and confirming this payment, you\n    authorise (A) Rocket Rides and Stripe, our payment service provider\n    and/or PPRO, its local service provider, to send instructions to your\n    bank to debit your account and (B) your bank to debit your account in\n    accordance with those instructions. As part of your rights, you are\n    entitled to a refund from your bank under the terms and conditions of\n    your agreement with your bank. A refund must be claimed within 8 weeks\n    starting from the date on which your account was debited. Your rights\n    are explained in a statement that you can obtain from your bank. You\n    agree to receive notifications for future debits up to 2 days before\n    they occur.\n  </div>\n  <!-- Used to display form errors. -->\n  <div id=\"error-message\" role=\"alert\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Signature",
          "title": "",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Signature",
              "text": "<label class=\"field-label required\">Member Signature</label>\n<div id=\"signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Member Signature",
              "label": "Encoded Member Signature",
              "key": "f26",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "Member Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Card Error",
          "title": "",
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Error Details",
              "text": "<p class=\"errorDetails\" id=\"errorValue\"/p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Hidden Fields",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "customerBillingId",
              "label": null,
              "key": "f65",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Customer Reference",
              "label": null,
              "key": "f54",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Status",
              "label": "Status",
              "key": "f27",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Footer",
          "title": "",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "button",
              "label": "Previous",
              "name": "Previous",
              "visible": true,
              "enabled": true,
              "renderType": "previous-page",
              "renderAttributes": {
              }
            },
            {
              "type": "button",
              "label": "Submit",
              "name": "Submit",
              "visible": true,
              "enabled": true,
              "renderType": "custom",
              "renderAttributes": {
              },
              "events": [
                {
                  "name": "Submit",
                  "type": "Click",
                  "action": "Custom",
                  "code": "debugger;\n\nif (Object.keys(K('form').validate()).length>0) {\n  K('form').submitPage();\n} else {\n  K('button[Submit]').disable();\n  var paymentType=\"\";\n  if (K('field[Payment Method]').value()===\"Credit Card\") {\n    paymentType=\"card\";\n  } else {\n    paymentType=\"sepa_debit\";\n  }\n\n  stripe\n    .createSource(paymentType===\"card\" ? cardElement : ibanElement, {\n    type: paymentType,\n    currency:  K('space').attributes('Currency'),\n    owner: {\n      name: K('field[First Name]').value()+\" \"+K('field[Last Name]').value(),\n    },\n  })\n    .then(function(result) {\n    // Handle result.error or result.source\n    if (result.error) {\n      K('button[Submit]').enable();\n      $(\"#errorValue\").html(result.error.message);\n      K('section[Card Error]').show();\n    } else {\n      debugger;\n      console.log(result.source);\n      sourceID=result.source.id;\n      completeRegisterUser();\n    }    \n  });\n}\n"
                }
              ]
            }
          ]
        }
      ],
      "events": [
        {
          "name": "Display Signature",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Member Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Member Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.signaturePad = el;\n  },\n});\n",
          "runIf": ""
        },
        {
          "name": "Handle Erros",
          "type": "Submit",
          "action": "Custom",
          "code": "setTimeout(function(){\nif ($(\".has-error\").length>0){\n  $(\".has-error\").each(function(i,l) { \n    if ($(l).attr(\"data-element-name\").indexOf(\"Signature\")!==-1) {\n      sigCanElName=$(l).attr(\"data-element-name\").replace(\"Encoded \",\"\");\n      $(K('content['+sigCanElName+']').element()).addClass(\"has-error\");\n    }\n  })  \n  $('.main-container').animate({\n    scrollTop: 0\n  },500);\n}\n},100);"
        },
        {
          "name": "Load Defaults",
          "type": "Load",
          "action": "Set Fields",
          "mappings": [
            {
              "field": "First Name",
              "value": "${resources('Get Member:First Name')}",
              "visible": true
            },
            {
              "field": "Last Name",
              "value": "${resources('Get Member:Last Name')}",
              "visible": true
            },
            {
              "field": "Address",
              "value": "${resources('Get Member:Address')}",
              "visible": true
            },
            {
              "field": "Suburb",
              "value": "${resources('Get Member:Suburb')}",
              "visible": true
            },
            {
              "field": "Postcode",
              "value": "${resources('Get Member:Postcode')}",
              "visible": true
            },
            {
              "field": "State",
              "value": "${resources('Get Member:State')}",
              "visible": true
            },
            {
              "field": "Mobile",
              "value": "${resources('Get Member:Phone Number')}",
              "visible": true
            },
            {
              "field": "DOB",
              "value": "${resources('Get Member:DOB')}",
              "visible": true
            },
            {
              "field": "Email",
              "value": "${resources('Get Member:Email')}",
              "visible": true
            },
            {
              "field": "Billing Period",
              "value": "${values('Payment Frequency')}",
              "visible": true
            },
            {
              "field": "Billing Start Date",
              "value": "${values('The first instalment is due on')}",
              "visible": true
            }
          ],
          "bridgedResourceName": "Get Member"
        },
        {
          "name": "Scroll to Top",
          "type": "Load",
          "action": "Custom",
          "code": "$('.main-container').animate({\n  scrollTop: 0\n},500);\n"
        },
        {
          "name": "Review",
          "type": "Load",
          "action": "Custom",
          "code": "",
          "runIf": "form('review')"
        },
        {
          "name": "Member User Load",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nif (!K(\"identity\").teams.includes(\"Role::Program Managers\")) {\n      K('field[First Name]').disable();\n      K('field[Last Name]').disable();\n      K('field[First Payment]').disable();\n}"
        },
        {
          "name": "Load States",
          "type": "Load",
          "action": "Custom",
          "code": "debugger\nvar states=K('space').attributes('School States').split(\",\");\nvar options=[];\nstates.forEach(state => {\n  options[options.length]={\n  \tlabel: state,\n    value: state\n  }\n});  \n\nK('field[State]').options(options);"
        },
        {
          "name": "Set Cost",
          "type": "Load",
          "action": "Custom",
          "code": "var fee=K('field[I promise to pay equal FREQUENCY instalments of]').value();\nvar adminFee=0; /*K('field[Admin Fee]').value().replace(\"%\",\"\");*/\nvar total=Number(fee)+(Number(fee)*(Number(adminFee)/100));\ntotal=total.toFixed(2)\n\nK('field[Payment]').value(total);"
        },
        {
          "name": "Load Stripe Card Info",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nsetTimeout(function() {\n  stripe = Stripe(K('space').attributes('POS Stripe Publishable Key'),{\"stripeAccount\":K('space').attributes('Stripe Account ID')});\n  elements = stripe.elements();\n\n  cardElement = elements.create('card', {hidePostalCode: true});\n  cardElement.mount('#card-element');\n  cardElement.on('change', function(event) {\n    debugger;\n    if (event.complete) {\n       K('field[Payment Method Complete]').value(\"COMPLETED\");\t\t\n    } else {\n       K('field[Payment Method Complete]').value(\"\");\t\t\n    }\n  });\n},3000);",
          "runIf": "!form('review')"
        }
      ],
      "name": "Billing Information",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [
    {
      "endpoint": "Display",
      "name": "Stripe Authenticated Users"
    },
    {
      "endpoint": "Submission Access",
      "name": "Stripe Authenticated Users"
    },
    {
      "endpoint": "Submission Modification",
      "name": "Stripe Authenticated Users"
    }
  ],
  "slug": "stripe-member-registration",
  "status": "Active",
  "submissionLabelExpression": "${values('Student First Name')} ${values('Student Last Name')} Start : ${values('Term Date')} - ${submission('id')}",
  "type": "Service"
}