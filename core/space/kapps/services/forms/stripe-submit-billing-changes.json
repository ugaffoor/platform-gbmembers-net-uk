{
  "anonymous": false,
  "attributes": [
    {
      "name": "Cancel Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Cloning Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Comment Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Submission Workflow",
      "values": [
        "Submitted - True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Members",
      "name": "Get Billing Members",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Get Active Billing Members",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Family Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Family Member')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Members')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Get Program",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Programs')}",
          "name": "ID"
        }
      ],
      "qualification": "By ID",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Members",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Get Active and Frozen Members",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Program Fees",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Payment Frequency')}",
          "name": "Frequency"
        }
      ],
      "qualification": "By Frequency",
      "status": "Active"
    }
  ],
  "categorizations": [
    {
      "category": {
        "slug": "stripe-billing"
      }
    }
  ],
  "customHeadContent": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script src=\"https://code.jquery.com/ui/1.14.1/jquery-ui.js\"></script>\n<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css\">\n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.12.1/css/all.css\" crossorigin=\"anonymous\">\n\n<script src=\"https://js.stripe.com/v3/\" defer></script>\n<script>\nvar stripe = null;\nvar elements = null;\n\nvar cardElement = null;\nvar ibanElement = null;\nvar sourceID = null;  \n</script>\n<style>\n  #card-element {\n    width: 400px;\n\t}\n</style>\n<style>\n.errorDetails {\n    background-color: red;\n    border-radius: 5px;\n    margin: 5px;\n}  \n.card-container {\n    background-color: rgb(240, 240, 240);\n    margin: auto;\n    width: calc(95%);\n\n    border: none;\n    border-radius: 4px;\n}\n.form-group {\n    flex: 0 0 auto;\n    flex-flow: column !important;\n}\n#checkout-form {\n    position: relative;\n    width: 400px;\n    padding: 10px;\n}\n\n#checkout-form label {\n    display: block;\n    min-height: 25px;\n\n    font-size: 15px;\n    font-weight: 500;\n    margin: 5px 0;\n    padding: 0;\n    color: red;\n}\n\n#card-number, #card-cvv, #card-expiry {\n    background-color: #FFF;\n    display: block;\n    width: calc(90%);\n    border-radius: 2px;\n    border: 1px solid rgba(200, 200, 200, 1);\n    padding: 14px 60px 13px 20px;\n    margin: auto;\n    transition: all 100ms ease-out;\n}\n\n/* card images are added to card number */\n#card-number {\n    background-image: none;\n\n    background-origin: content-box;\n    background-position: calc(100% + 40px) center;\n    background-repeat: no-repeat;\n    background-size: contain;\n}\n\n/* buttons */\n.btn {\n    vertical-align: top;\n}\n\n#pay-button {\n    position: relative;\n    border: none;\n    border-radius: 4px;\n    background-color: #0c384f;\n    color: rgba(255, 255, 255, 1);\n    display: inline-block;\n    transition: all 100ms ease-out;\n    padding: 11px 25px;\n    margin-left: 30px;\n}\n\n#pay-button:hover, #pay-button:active {\n    background-color: rgba(69, 36, 89, 1);\n}\n\n#pay-button:active {\n    box-shadow: inset 0 0 35px rgba(0, 0, 0, 0.3);\n}\n\n#pay-button:disabled {\n    background-color: rgba(255, 255, 255, 1);\n    border: 1px solid #0c384f;\n    color: #0c384f;\n}\n\n/* feedback is displayed after tokenization */\n#feedback {\n    position: relative;\n    left: 15px;\n    display: inline-block;\n    background-color: transparent;\n    border: 0px solid rgba(200, 200, 200, 1);\n    border-radius: 4px;\n    transition: all 100ms ease-out;\n    padding: 11px;\n}\n\n#feedback.error {\n    color: red;\n    border: 1px solid;\n}\n\n#feedback.success {\n    color: seagreen;\n    border: 1px solid;\n}\n</style>\n\n<style>\n.review_true {\n\tdisplay: none;  \n}\n.discountEdit {\n\tmargin-left: 10px;\n  cursor: pointer;\n}\ninput.percent {\n    width: 80px;\n}  \n  \n#memberTableDiv:before {\n    content: \"*\";\n    color: red;\n    float: right;\n}  \n.editOptionText {\n    margin: 10px;\n    background-color: #eeeded;\n    border-radius: 5px;\n    padding: 4px;\n}  \n.editInactiveOptionText {\n    margin: 10px;\n    background-color: #c0e2c0;\n    border-radius: 5px;\n    padding: 4px;\n}  \n  \n.editingOptions {\n  display: flex;\n }\n.editingOptions input {\n    visibility: hidden;\n}\n.editingOptions label {\n\t\twidth: 250px;  \n    background-color: gray;\n    padding: 5px;\n    border-radius: 5px;\n    color: white !important;\n    cursor: pointer;\n}\n.editingOptions input[type='radio']:checked + label {\n    background-color: #4d5059;\n}\n  \n#checkout-form iframe {\n    height: 18px;\n}  \n.errorDetails {\n    background-color: red;\n    border-radius: 5px;\n    margin: 5px;\n}  \n/* buttons */\n.btn {\n    vertical-align: top;\n}\n</style>\n<style>\n\t.acceptTerms + label {\n    margin-left: 20px !important;\n\t}  \n  .hidden{\n   display:none; \n  }\nbody a {\n    color: #003b72;\n}  \nbutton.editButton {\n    border-radius: .25rem;\n    line-height: 1.0rem;\n    padding: .2rem 0.8rem;\n    margin-right: .5rem;\n    border: none;\n    color: #fff;\n    font-size: .75rem;\n    background-color: #0c384f;\n}\n.editingOptions button {\n    background-color: #d7d1d1;\n    border-color: gray;\n}\n.editingOptions button:hover, .editingOptions button:active, .editingOptions button:focus {\n    background-color: gray !important;\n}  \n</style>\n\n<style>\n  .hidden{\n   display:none; \n  }\n</style>\n<script>\n\tfunction completeRegisterUser() {\n    debugger;\n    var registerSettings = {\n      \"crossDomain\": true,\n      \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/registerUser\",\n      \"method\": \"POST\",\n      \"headers\": {},\n      \"dataType\": \"json\",\n      \"contentType\": \"application/json\",\n      \"data\": JSON.stringify({\n        \"customerId\": K('field[Member ID]').value(),\n        \"firstName\": K('field[Student First Name]').value(),\n        \"lastName\": K('field[Student Last Name]').value(),\n        \"dob\": K('field[DOB]').value(),\n        \"address\": K('field[Address]').value(),\n        \"suburb\": K('field[Suburb]').value(),\n        \"state\": K('field[State]').value(),\n        \"postCode\": K('field[Postcode]').value(),\n        \"email\": K('field[Email]').value(),\n        \"mobile\": K('field[Mobile]').value(),\n        \"payment\": K('field[Fee Total]').value(),\n        \"firstPayment\": K('field[Fee Total]').value(),\n        \"billingPeriod\": K('field[Billing Period]').value(),\n        \"contractStartDate\": K('field[Date Affective]').value(),\n        \"paymentMethod\": K('field[Payment Method]').value()===\"\" || K('field[Payment Method]').value()===null ? \"Credit Card\" : K('field[Payment Method]').value(),\n        \"cardToken\": K('field[Billing Customer Id]').value(),\n        \"adminFee\": \"\", /*K('field[Admin Fee]').value().replace(\"%\",\"\"),*/\n        \"setupFee\": \"\", /*K('field[Setup Fee]').value().replace(\"%\",\"\"),*/\n        \"space\": K('space').slug(),\n        \"billingService\": K('space').attributes('Billing Company'),\n        \"currency\": K('space').attributes('Currency'),\n      })\n    }\n    $.ajax(registerSettings).done(function (response) {\n      debugger;\n      console.log(response);\n      if (response.error===100) {\n        var message=response.errorMessage;\n        if (response.errorMessage===\"DECLINE\") {\n          message=\"Credit Card not valid (Declined)\";  \n        }\n        K('button[Submit]').enable();\n\n        $(\"#errorValue\").html(message);\n        K('section[Card Error]').show();\n      } else {\n        K('section[Card Error]').hide();\n        K('field[customerBillingId]').value(response.data.customerBillingId);\n        K('field[Billing Customer Reference]').value(response.data.customerReference);\n        K('form').submitPage();\n      }\n    });        \n  }  \n  \n  function GetURLParameter(sParam){\n    arr=window.location.hash.split(sParam+\"=\");\n    if (arr.length>0){\n      return arr[1];\n    }\n    return null;\n  }  \n</script>\n<script>\nvar editFeeMode=false;\nvar tax1Value;\nvar tax2Value;\nvar tax3Value;\n\nvar discounts;\nvar removedMembers;  \n  function getInt(val){\n    //So as not to breakup a potential fraction\n    let v = parseFloat(val);\n    //If we only have the whole:\n    if(v % 1 === 0){\n      return v;  \n    //If the numberis a fraction  \n    }else{\n      let n = v.toString().split('.').join('');\n      return parseInt(n);\n    }\n  }  \n  function editDiscount(id){\n    $(\"#discountDialog\").attr(\"rowID\", id);\n    let dataRow=global.viewerConfig.response.find(row => row.id===id);\n    $(\"#discountDialog .discountPercent\").val(dataRow.discount);\n    $(\"#discountDialog\").dialog(\"open\");\n  }\n  function applyCurrentDiscount(){\n    debugger;\n    let id=$(\"#discountDialog\").attr(\"rowID\");\n    let dataRow=global.viewerConfig.response.find(row => row.id===id);\n    dataRow.discount=$(\"#discountDialog .discountPercent\").val();\n    dataRow.edited=true;\n    $(\"#discountDialog\").dialog(\"close\");\n    completeTableChange();\n  }\n  \nfunction completeTableChange(){\n  if (K(\"form\").reviewMode()) return;\n \n  K('field[Family Member]').value(\"\");\n\t$(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(\"Select...\");  \t\t\t\t\n  K('field[Programs]').value(\"\");\n  K('field[tableMemberID]').value(\"\");\n  K('field[tableMemberName]').value(\"\");\n  K('field[tableProgram]').value(\"\");\n  K('field[tableFee]').value(\"\");\n  var useDiscounts=K('field[Apply Discounts]').value();\n  // Sort table\n  viewerConfig.response.sort(function(a, b){return b.cost - a.cost});\n  // Let calculate the discounts\n  viewerConfig.response.forEach(function(item, index){\n    if (item.edited) {\n        item.fee=((new Number(item.cost)) - ((new Number(item.cost))*(new Number(item.discount.replace(\"%\",\"\")))/100)).toFixed(2);\n    } else {\n      if (useDiscounts===\"Yes\" && index<=discounts.length-1){\n        item.discount=discounts[index].discount;\n        item.fee=((new Number(item.cost))*discounts[index].cost).toFixed(2);\n      } else if (useDiscounts===\"Yes\" && index>discounts.length-1 && discounts.length>0){\n        item.discount=discounts[discounts.length-1].discount;\n        item.fee=((new Number(item.cost))*discounts[discounts.length-1].cost).toFixed(2);\n      } else {\n        item.discount=\"0%\";\n        item.fee=((new Number(item.cost))).toFixed(2);\n      }\n    }\n  });\n  debugger;\n  if (editFeeMode) {\n    // Set payment value\n    var feeTotal=0;\n    var subTotal=0;\n    var total=0;\n    viewerConfig.response.forEach(function(item, index){\n      feeTotal=feeTotal+(new Number((new Number(item.fee)).toFixed(2)));\n    });\n    if (feeTotal===0) {\n      K('field[Fee Total]').value(\"0\");\n      K('field[TAX 1]').value(\"\");\n      K('field[TAX 2]').value(\"\");\n      K('field[TAX 3]').value(\"\");\n      K('field[Payment Total]').value(\"0\");\n    } else {  \n      if (K('space').attributes('Ignore Admin Fee')===null || K('space').attributes('Ignore Admin Fee')!==\"YES\") {  \n        var adminFee=K('space').attributes('Admin Fee Charge').replace(\"%\",\"\");\n\n        if (adminFee!==\"\" && adminFee!==0) {\n          var value=(Number(feeTotal)*(Number(adminFee)/100));\n          value=new Number(value.toFixed(2));\n          K('field[Admin Fee]').value(value);\n          subTotal=subTotal+value;\n        }\n      }\n      // Add taxes if configured\n      if (tax1Value!==undefined && tax1Value!==null && tax1Value!==\"\"){\n        var value=feeTotal*(new Number(tax1Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 1]').value(value);\n        subTotal=subTotal+value;\n      }\n      if (tax2Value!==undefined && tax2Value!==null && tax2Value!==\"\"){\n        var value=feeTotal*(new Number(tax2Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 2]').value(value);\n        subTotal=subTotal+value;\n      }\n      if (tax3Value!==undefined && tax3Value!==null && tax3Value!==\"\"){\n        var value=feeTotal*(new Number(tax3Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 3]').value(value);\n        subTotal=subTotal+value;\n      }\n      total=feeTotal+subTotal;\n      K('field[Payment Total]').value(total!==0 ? total.toFixed(2) : \"\");\n      K('field[Fee Total]').value(feeTotal.toFixed(2));   \n    }\n  }\n  global.viewerConfig.renderer.type($('#memberTableDiv'),global.viewerConfig);\n\n  $('#member-table tbody tr').on( 'click', function () {\n    if ( $(this).hasClass('selected') ) {\n      $(this).removeClass('selected');\n    }\n    else {\n      $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n      $(this).addClass('selected');\n    }\n  } );  \n  if (viewerConfig.response.length===0) {\n    K('field[ProgramTableContent]').value(\"EMPTY\");\n  }\n} \n  \nfunction memberProgramAdded(memberID, feeProgram) {\n  debugger;\n  found=false;\n\tif (memberID===null) return true;\n  viewerConfig.response.forEach(function(item){\n      if (item.id===memberID && item.feeProgram===feeProgram) {\n        found=true;\n      }\n  });  \n  return found;\n}\nfunction disableEdits(){\n  K('field[Include Family Members]').disable();  \n  K('field[Apply Discounts]').hide();  \n  K('field[Payment Frequency]').disable();  \n  K('field[Programs]').hide();  \n  K('section[Add buttons]').hide();\n  debugger;\n  K('field[TAX 1]').hide();\n  K('field[TAX 2]').hide();\n  K('field[TAX 3]').hide();\n  K('field[Admin Fee]').hide();\n\n  K('field[Fee Total]').hide();\n  K('field[Fee Total]').hide();\n  editFeeMode=false;\n  \n  K('section[New Schedule Date]').hide();\n  $(\"#rescheduleDateOnly\").prop(\"checked\", false);\n  $(\"#editBillingDetails\").prop(\"checked\", false);\n  $(\"#rescheduleWithDetails\").prop(\"checked\", false);\n  $(\"#rescheduleDateOnlyLabel\").show();\n  $(\"#rescheduleDateOnly\").prop(\"disabled\", false);\n  $(\"#rescheduleWithDetailsLabel\").show();      \n  $(\"#rescheduleWithDetails\").prop(\"disabled\", false);      \n  \n  K('field[Editing Option]').value(\"\");\n  $(K('field[Update Stripe]').element()).prop('checked', false);\n  $(K('field[Immediately]').element()).prop('checked', false);\n  K('field[Update Stripe]').enable()\n  K('field[Payment Options]').disable();\n  $(\".discountEdit\").removeClass(\"fa\");\n  $(\".discountEdit\").removeClass(\"fa-pen\");\n}\n  \nfunction enableRescheduleWithDetails(){\n  K('field[Payment Frequency]').value(K('field[Billing Period]').value());\n  \n  if (!K(\"form\").reviewMode()) {\n\t  K('field[Include Family Members]').enable();  \n    K('field[Payment Frequency]').enable();  \n  }\n  K('field[Programs]').show();  \n  K('section[Add buttons]').show();\n  debugger;\n  let tax1Label=K('space').attributes('TAX 1 Label'); \n  tax1Value=K('space').attributes('TAX 1 Value');     \n  if (tax1Label!==undefined && tax1Label!==null && tax1Label!==\"\") {\n    $(K('field[TAX 1]').wrapper()).find(\"label\").html(tax1Label);\n    K('field[TAX 1]').show();\n  }\n\n  let tax2Label=K('space').attributes('TAX 2 Label'); \n  tax2Value=K('space').attributes('TAX 2 Value');                \n  if (tax2Label!==undefined && tax2Label!==null && tax2Label!==\"\") {\n    $(K('field[TAX 2]').wrapper()).find(\"label\").html(tax2Label);\n    K('field[TAX 2]').show();\n  }\n\n  let tax3Label=K('space').attributes('TAX 3 Label'); \n  tax3Value=K('space').attributes('TAX 3 Value');                \n  if (tax3Label!==undefined && tax3Label!==null && tax3Label!==\"\") {\n    $(K('field[TAX 3]').wrapper()).find(\"label\").html(tax3Label);\n    K('field[TAX 3]').show();\n  }\n\n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n    K('field[Admin Fee]').hide();\n  } else {\n    K('field[Admin Fee]').show();\n  }\n    \n  if (K(\"form\").reviewMode()) {\n    if (K('field[Fee Total]').value()===null || K('field[Fee Total]').value()===\"\"){\n    \tK('field[Fee Total]').hide();\n  \t} else {\n      K('field[Fee Total]').show();\n    }\n  } else {\n\t\tK('field[Fee Total]').show();\n\t  K('field[Fee Total]').enable();\n  }\n  K('field[Payment Total]').disable();\n  \n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n  } else {\n    if (K('space').attributes('Admin Fee Label')!==null && K('space').attributes('Admin Fee Label')!==\"\"/* && (K('field[Admin Fee]').value()===null || K('field[Admin Fee]').value().indexOf(\"%\")===-1)*/) {\n      $(\"#admin_fee_label\").html(K('space').attributes('Admin Fee Label'));\n    }\n  }\n  $(\".discountEdit\").addClass(\"fa\");\n  $(\".discountEdit\").addClass(\"fa-pen\");\n  editFeeMode=true;  \n  completeTableChange();  \n}  \nfunction disableRescheduleWithDetails(){\n  K('field[Include Family Members]').disable();  \n  K('field[Apply Discounts]').hide();  \n  K('field[Payment Frequency]').disable();  \n  K('field[Programs]').hide();  \n  K('section[Add buttons]').hide();\n  debugger;\n  K('field[TAX 1]').hide();\n  K('field[TAX 2]').hide();\n  K('field[TAX 3]').hide();\n  K('field[Admin Fee]').hide();\n\n  K('field[Fee Total]').hide();\n  K('field[Fee Total]').hide();\n  editFeeMode=false;\n  $(\".discountEdit\").removeClass(\"fa\");\n  $(\".discountEdit\").removeClass(\"fa-pen\");\n}\nfunction disableEditBillingDetails(){\n  K('field[Include Family Members]').disable();  \n  K('field[Apply Discounts]').hide();  \n  K('field[Payment Frequency]').disable();  \n  K('field[Programs]').hide();  \n  K('section[Add buttons]').hide();\n  debugger;\n  K('field[TAX 1]').hide();\n  K('field[TAX 2]').hide();\n  K('field[TAX 3]').hide();\n  K('field[Admin Fee]').hide();\n\n  K('field[Fee Total]').hide();\n  K('field[Fee Total]').hide();\n  editFeeMode=false;\n  $(\".discountEdit\").removeClass(\"fa\");\n  $(\".discountEdit\").removeClass(\"fa-pen\");\n}\nfunction enableEditBillingDetails(){\n  K('field[Payment Frequency]').value(K('field[Billing Period]').value());\n  if (!K(\"form\").reviewMode()) {\n\t  K('field[Include Family Members]').enable();  \n  }\n  K('field[Programs]').show();  \n  K('section[Add buttons]').show();\n  debugger;\n  let tax1Label=K('space').attributes('TAX 1 Label'); \n  tax1Value=K('space').attributes('TAX 1 Value');     \n  if (tax1Label!==undefined && tax1Label!==null && tax1Label!==\"\") {\n    $(K('field[TAX 1]').wrapper()).find(\"label\").html(tax1Label);\n    K('field[TAX 1]').show();\n  }\n\n  let tax2Label=K('space').attributes('TAX 2 Label'); \n  tax2Value=K('space').attributes('TAX 2 Value');                \n  if (tax2Label!==undefined && tax2Label!==null && tax2Label!==\"\") {\n    $(K('field[TAX 2]').wrapper()).find(\"label\").html(tax2Label);\n    K('field[TAX 2]').show();\n  }\n\n  let tax3Label=K('space').attributes('TAX 3 Label'); \n  tax3Value=K('space').attributes('TAX 3 Value');                \n  if (tax3Label!==undefined && tax3Label!==null && tax3Label!==\"\") {\n    $(K('field[TAX 3]').wrapper()).find(\"label\").html(tax3Label);\n    K('field[TAX 3]').show();\n  }\n\n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n    K('field[Admin Fee]').hide();\n  } else {\n    K('field[Admin Fee]').show();\n  }\n    \n  if (K(\"form\").reviewMode()) {\n    if (K('field[Fee Total]').value()===null || K('field[Fee Total]').value()===\"\"){\n    \tK('field[Fee Total]').hide();\n  \t} else {\n      K('field[Fee Total]').show();\n    }\n  } else {\n\t\tK('field[Fee Total]').show();\n\t  if (!K(\"form\").reviewMode()) {\n\t\t  K('field[Fee Total]').enable();\n    }\n  }\n  K('field[Payment Total]').disable();\n  \n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n  } else {\n    if (K('space').attributes('Admin Fee Label')!==null && K('space').attributes('Admin Fee Label')!==\"\"/* && (K('field[Admin Fee]').value()===null || K('field[Admin Fee]').value().indexOf(\"%\")===-1)*/) {\n      $(\"#admin_fee_label\").html(K('space').attributes('Admin Fee Label'));\n    }\n  }\n  \n  if (K('field[Billing Status]').value()===\"Inactive\"){\n\t\t$(K('field[Update Stripe]').element()).prop('checked', true);\n    K('field[Update Stripe]').disable();\n    K('section[Update Stripe details]').show();\n\t\t$(K('field[Immediately]').element()).prop('checked', false);  \n    K('field[Immediately]').disable();\n\n    K('field[Payment Options]').enable();\n} else {\n\t\t$(K('field[Update Stripe]').element()).prop('checked', false);\n    K('field[Update Stripe]').enable();\n\t\t$(K('field[Immediately]').element()).prop('checked', false);  \n    K('field[Immediately]').enable();\n  }\n  \n  editFeeMode=true;  \n  $(\".discountEdit\").addClass(\"fa\");\n  $(\".discountEdit\").addClass(\"fa-pen\");\n  completeTableChange();  \n}    \nfunction rescheduleDateOnly(){\n  debugger;\n  K('field[Payment Frequency]').value(K('field[Billing Period]').value());\n  K('field[Editing Option]').value(\"RescheduleDateOnly\");\n  disableRescheduleWithDetails();\n  disableEditBillingDetails();\n}\nfunction rescheduleWithDetails(){\n  K('field[Editing Option]').value(\"RescheduleWithDetails\");\n  disableEditBillingDetails();\n  enableRescheduleWithDetails();  \n}\nfunction editBillingDetails(){\n  K('field[Editing Option]').value(\"EditBillingDetails\");\n  disableRescheduleWithDetails();\n  enableEditBillingDetails();\n}\nfunction isRescheduleChange() {\n  return (K('field[Editing Option]').value()===\"RescheduleDateOnly\" || K('field[Editing Option]').value()===\"RescheduleWithDetails\");\n}\nfunction isEditBillingDetails() {\n  return (K('field[Editing Option]').value()===\"EditBillingDetails\");\n}\n</script>",
  "description": "All billing changes that are not freezes or cancellations will be processed through this form.<br>\n<br>\n<ul>\n<li>\nManage billing details for existing members, whether they are for families or individuals.\n</li>\n<li>\nAdd or remove family members within an existing billing account.\n</li>\n<li>\nAdjust the tuition pricing for an entire family or a single student.\n</li>\n<li>\nAdjust the payment date or frequency.\n</li>\n</ul>",
  "name": "Stripe Submit Billing Changes",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "Select Member",
          "title": "Select Member",
          "visible": "!form('review')",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Members",
              "label": "Members",
              "key": "f38",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "A member must be selected",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Members",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('bridgedResource[Get Member]').load({\n  attributes: ['Member ID', 'First Name', 'Last Name'],\n  values: {'ID' : 'Allen'},\n  success: function(bridgedData) {\n    if (bridgedData===null) return;\n    editFeeMode=false; \n    debugger;\n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Billing Customer Id]').value(bridgedData['Billing Customer Id']);\n    K('field[Billing Customer Reference]').value(bridgedData['Billing Customer Reference']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[Payment Frequency]').value(bridgedData['Billing Period']);\n    K('field[Billing Period]').value(bridgedData['Billing Period']);\n    K('field[Billing Start Date]').value(bridgedData['Billing Start Date']);\n    K('field[Biller Migrated]').value(bridgedData['Biller Migrated']);\n    K('field[Current Payment Frequency]').value(bridgedData['Billing Period']);\n    K('field[Current Payment]').value(bridgedData['Payment']);\n    K('field[Current Fee]').value(bridgedData['Admin Fee'].replace(\"$\",\"\"));\n    K('field[Payment Total]').value(bridgedData['Payment']);\n    K('field[Address]').value(bridgedData['Address']);\n    K('field[Suburb]').value(bridgedData['Suburb']);\n    K('field[State]').value(bridgedData['State']);\n    K('field[Postcode]').value(bridgedData['Postcode']);\n    K('field[Email]').value(bridgedData['Email']);\n    K('field[Mobile]').value(bridgedData['Mobile']);\n    K('field[DOB]').value(bridgedData['DOB']);\n    K('field[POS Profile ID]').value(bridgedData['POS Profile ID']);\n\n    K('section[Student Information]').show();\n\n    var paymentPeriod=bridgedData['Billing Period'];\n    var period=\"months\";\n    if (paymentPeriod===\"Daily\") {\n      period=\"days\";\n    } else if (paymentPeriod===\"Weekly\" || paymentPeriod===\"Fortnightly\") {\n      period=\"weeks\"; \n    } else if (paymentPeriod===\"Monthly\" || paymentPeriod===\"Quarterly\" || paymentPeriod===\"4 Months\" || paymentPeriod===\"6 Months\") {\n      period=\"months\"; \n    } \n    \n    period=1;\n    span=\"days\";\n    if (paymentPeriod===\"Weekly\"){\n      period=7;\n    }\n    if (paymentPeriod===\"Fortnightly\"){\n      period=14;\n    }\n    if (paymentPeriod===\"Monthly\") {\n      period=1;\n      span=\"months\";\n    }\n    if (paymentPeriod===\"Quarterly\") {\n      period=3;\n      span=\"months\";\n    }\n    if (paymentPeriod===\"4 Months\") {\n      period=4;\n      span=\"months\";\n    }\n    if (paymentPeriod===\"6 Months\") {\n      period=6;\n      span=\"months\";\n    }\n    \n    var nextBillingDate=undefined;\n    if (moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\").isAfter(moment())||moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\").isSame(moment().hour(0).minute(0).second(0).millisecond(0))){\n      nextBillingDate=moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\");\n    } else {\n      nextBillingDate=moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\").add(moment().diff(moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\"), period)+1,period);\n      if (paymentPeriod===\"Fortnightly\") {\n        days=moment().diff(moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\"), \"days\");\n        rem=days%14;\n        days=days-rem+14;\n        nextBillingDate=moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\").add(days, \"days\");\n      } else {\n        nextBillingDate=moment(bridgedData['Billing Start Date'],\"YYYY-MM-DD\").add(period, span);\n      }\n    }\n    K('field[Date Affective]').value(nextBillingDate.format('YYYY-MM-DD'));\n    K('field[Billing Next Date]').value(nextBillingDate.format('YYYY-MM-DD'));\n\n    bundle.config.widgets.xdsoftDatepickerRemove({\n      element: K(\"form\").find(\"#dateaffective\")[0]\n    });          \n    bundle.config.widgets.xdsoftDatepickerRemove({\n      element: K(\"form\").find(\"#datepaymentsresume\")[0]\n    });          \n    debugger;\n    var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n    allowDates=[];\n    for (i=0;i<22;i++){\n      if (moment(nextBillingDate, \"YYYY-MM-DD\").add(period*i,span).isAfter(moment())) {\n        allowDates[allowDates.length]=moment(nextBillingDate, \"YYYY-MM-DD\").add(period*i,span).format(\"DD-MM-YYYY\");\n      }\n    }\n    bundle.config.widgets.xdsoftDatepicker({\n      element: K(\"form\").find(\"#dateaffective\")[0],\n      timepicker: false,\n      displayDateFormat: \"MM/DD/YYYY\",\n      options: {\n        allowDates: allowDates,\n        formatDate:\"d-m-Y\",\n        validateOnBlur:false\n      },\n      onSelectDate:function(ct,$i){\n        K('field[Date Affective]').value(ct.dateFormat('YYYY-MM-DD'));\n      },                \n      onGenerate: function( ct ){\n          $(\"#dateaffective input\").val(moment(K('field[Date Affective]').value(),\"YYYY-MM-DD\").format(\"MM/DD/YYYY\"));\n      }\n    });          \n    bundle.config.widgets.xdsoftDatepicker({\n      element: K(\"form\").find(\"#datepaymentsresume\")[0],\n      timepicker: false,\n      displayDateFormat: \"MM/DD/YYYY\",\n      options: {\n        allowDates: allowDates,\n        formatDate:\"d-m-Y\",\n        validateOnBlur:false\n      },\n      onSelectDate:function(ct,$i){\n        K('field[Date Payments Resume]').value(ct.dateFormat('YYYY-MM-DD'));\n      },                \n      onGenerate: function( ct ){\n          $(\"#datepaymentsresume input\").val(K('field[Date Payments Resume]').value()!=null ? moment(K('field[Date Payments Resume]').value(),\"YYYY-MM-DD\").format(\"MM/DD/YYYY\") : \"\");\n      }    \n    });            \n    \n    bundle.config.widgets.xdsoftDatepickerRemove({\n      element: K(\"form\").find(\"#newBillingStartDate\")[0]\n    });          \n    debugger;\n    var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n    bundle.config.widgets.xdsoftDatepicker({\n      element: K(\"form\").find(\"#newBillingStartDate\")[0],\n      timepicker: false,\n      displayDateFormat: \"MM/DD/YYYY\",\n      options: {\n        startDate: new Date((new Date()).getTime() + 24 * 60 * 60 * 1000),\n        minDate: 0, \n        formatDate:\"d-m-Y\",\n        validateOnBlur:false\n      },\n      onSelectDate:function(ct,$i){\n        K('field[New Billing Start Date]').value(ct.dateFormat('YYYY-MM-DD'));\n      },                \n      onGenerate: function( ct ){\n        $('.xdsoft_today')\n          .addClass('xdsoft_disabled');\n      }\n    });          \n    \n    var familyMembers=bridgedData['Billing Family Members'];\n    if (familyMembers!==\"\" && familyMembers!==null && familyMembers!==\"[]\"){\n      if (JSON.parse(familyMembers).length>1) {\n\t      K('field[Include Family Members]').value(\"Yes\");\n      } else {\n\t      K('field[Include Family Members]').value(\"No\");\n      }\n      K('field[membersJSON]').value(familyMembers);\n      K('field[feesJSON]').value(bridgedData['Family Fee Details']);\n      \n      viewerConfig.response = JSON.parse(K('field[feesJSON]').value());\n      if (viewerConfig.response!==null) {\n\t      DataViewer.renderResults($('#memberTableDiv'), viewerConfig);  \n      }\n      \n      $('#member-table tbody tr').on( 'click', function () {\n        if ( $(this).hasClass('selected') ) {\n          $(this).removeClass('selected');\n        }\n        else {\n          $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n          $(this).addClass('selected');\n        }\n      });     \n      completeTableChange();      \n    } else {\n\t      K('field[Include Family Members]').value(\"No\");\n      viewerConfig.response = JSON.parse(\"[]\");\n      if (viewerConfig.response!==null) {\n\t      DataViewer.renderResults($('#memberTableDiv'), viewerConfig);  \n      }\n      \n      $('#member-table tbody tr').on( 'click', function () {\n        if ( $(this).hasClass('selected') ) {\n          $(this).removeClass('selected');\n        }\n        else {\n          $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n          $(this).addClass('selected');\n        }\n      });     \n      completeTableChange();      \n    }\n    removedMembers=undefined;\n    \n    \n    if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n      K('field[Admin Fee]').hide();\n      K('field[Admin Fee]').value(\"\");\n    } else {\n      if (K('space').attributes('Admin Fee Label')!==null && K('space').attributes('Admin Fee Label')!==\"\" && (K('field[Admin Fee]').value()===null || K('field[Admin Fee]').value().indexOf(\"%\")===-1)) {\n        $(\"#admin_fee_label\").html(K('space').attributes('Admin Fee Label'));\n      }\n    }\n    disableEdits();\n\n    K('section[Student Information]').show();\n    K('section[Program Information]').show();    \n  }\n});",
                  "bridgedResourceName": null,
                  "runIf": "values('Members')!==\"\""
                },
                {
                  "name": "Clear Member Details",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('field[Member ID]').value(\"\");\nK('field[Billing Customer Id]').value(\"\");\nK('field[Billing Customer Reference]').value(\"\");\nK('field[Student First Name]').value(\"\");\nK('field[Student Last Name]').value(\"\");\nK('section[Student Information]').hide();\nK('section[Program Information]').hide();\n\ndisableEdits();\nK('section[Member Select Space]').show();    \n",
                  "runIf": "values('Members')===null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Get Billing Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Get Billing Members:First Name')} ${resources('Get Billing Members:Last Name')}",
                "value": "${resources('Get Billing Members:id')}"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Select",
              "text": "<div id=\"selectMemberMenu\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Student Information",
          "title": "Student Information",
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Member ID",
              "label": "Member ID",
              "key": "f39",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student First Name",
              "label": "Student's First Name",
              "key": "f28",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student Last Name",
              "label": "Student's Last Name",
              "key": "f29",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Status",
              "label": "Billing Status",
              "key": "f110",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested For",
              "label": "Requested For",
              "key": "f88",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Customer Id",
              "label": "Billing Customer Id",
              "key": "f55",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Customer Reference",
              "label": "Billing Customer Reference",
              "key": "f72",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Billing Info",
                  "type": "Change",
                  "action": "Custom",
                  "code": "var settings = {\n  \"crossDomain\": true,\n  \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/billingInfo\",\n  \"method\": \"POST\",\n  \"headers\": {},\n  \"dataType\": \"json\",\n  \"contentType\": \"application/json\",\n  \"data\": JSON.stringify({\n    \"space\": K('space').slug(),\n    \"billingService\": \"Stripe\",\n    \"customerId\": K('field[Billing Customer Reference]').value(),\n  })\n}\n$.ajax(settings).done(function (response) {\n  debugger;\n  console.log(response);\n  if (response.error===100) {\n    var data=response.data;\n    var message=data.status_message;\n    $(\"#errorValue\").html(message);\n  } else {\n    K('field[Billing Status]').value(response.data.statusCode);\n    \n    K('field[Billing Status]').hide();\n    K('section[Inactive Payment Options]').hide();\n\n    if (response.data.statusCode===\"Inactive\") {\n      K('field[Billing Status]').show();\n      $(\"#rescheduleDateOnlyLabel\").hide();\n      $(\"#rescheduleDateOnly\").prop(\"disabled\", true);\n\t\t\t$(\"#rescheduleWithDetailsLabel\").hide();      \n\t\t\t$(\"#rescheduleWithDetails\").prop(\"disabled\", true);  \n\t    K('section[Inactive Payment Options]').show();\n      \n      \n      bundle.config.widgets.xdsoftDatepickerRemove({\n        element: K(\"form\").find(\"#dateaffective\")[0]\n      });          \n      debugger;\n      var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n      bundle.config.widgets.xdsoftDatepicker({\n        element: K(\"form\").find(\"#dateaffective\")[0],\n        timepicker: false,\n        displayDateFormat: \"MM/DD/YYYY\",\n        options: {\n          formatDate:\"d-m-Y\",\n          validateOnBlur:false\n        },\n        onSelectDate:function(ct,$i){\n          K('field[Date Affective]').value(ct.dateFormat('YYYY-MM-DD'));\n        },                \n        onGenerate: function( ct ){\n            $(\"#dateaffective input\").val(moment(K('field[Date Affective]').value(),\"YYYY-MM-DD\").format(\"MM/DD/YYYY\"));\n        }\n      });          \n    }    \n  }\n});\n"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Period",
              "label": "Billing Period",
              "key": "f60",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Biller Migrated",
              "label": "Biller Migrated",
              "key": "f87",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Start Date",
              "label": "Billing Start Date",
              "key": "f68",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Next Date",
              "label": "Billing Next Date",
              "key": "f108",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Current Payment",
              "label": "Current Payment",
              "key": "f66",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Current Fee",
              "label": "Current Fee",
              "key": "f67",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Current Payment Frequency",
              "label": "Current Payment Frequency",
              "key": "f70",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Address",
              "label": "Address",
              "key": "f79",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Suburb",
              "label": "Suburb",
              "key": "f80",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "State",
              "label": "State",
              "key": "f81",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Postcode",
              "label": "Postcode",
              "key": "f82",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Email",
              "label": "Email",
              "key": "f83",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Mobile",
              "label": "Mobile",
              "key": "f84",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "DOB",
              "label": "DOB",
              "key": "f85",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Source IP",
              "label": "Source IP",
              "key": "f89",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "POS Profile ID",
              "label": "POS Profile ID",
              "key": "f90",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "AutoCreating",
              "label": "AutoCreating",
              "key": "f93",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "customerBillingId",
              "label": "customerBillingId",
              "key": "f86",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Editing Options",
              "text": "<span class=\"editingOptions\">\n\t<input type=\"radio\" name=\"editingOptions\" id=\"editBillingDetails\" value=\"editBillingDetails\"/>\n  <label id=\"editBillingDetailsLabel\" for=\"editBillingDetails\"> Edit Billing Details</label>\n\t<input type=\"radio\" name=\"editingOptions\" id=\"rescheduleDateOnly\" value=\"rescheduleDateOnly\"/>\n  <label id=\"rescheduleDateOnlyLabel\" for=\"rescheduleDateOnly\"> Reschedule Date Only</label>\n\t<input type=\"radio\" name=\"editingOptions\" id=\"rescheduleWithDetails\" value=\"rescheduleWithDetails\"/>\n  <label id=\"rescheduleWithDetailsLabel\" for=\"rescheduleWithDetails\"> Reschedule and Change Details</label>\n</span>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Editing Option",
              "label": "Editing Option",
              "key": "f102",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "RescheduleDateOnlyInfo",
              "text": "<div class=\"editOptionText\">\n  <span>Maintain the current Membership fee, and only select a new Billing Date.</span><br>\n  <span><b style=\"color:red\">Note, all failed billing attempts will not be retried.</b></span>\n</div>",
              "visible": "values('Editing Option')===\"RescheduleDateOnly\" ",
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "RescheduleWithDetailsInfo",
              "text": "<div class=\"editOptionText\">\n  <span><b style=\"color:red\">Note, all failed billing attempts will not be retried.</b></span>\n</div>",
              "visible": "values('Editing Option')===\"RescheduleWithDetails\" ",
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "EditBillingDetailsInfo",
              "text": "<div class=\"editOptionText\">\n\t<span>This option will maintain the current Billing cycle.</span>\n</div>",
              "visible": "values('Editing Option')===\"EditBillingDetails\" && values('Billing Status')===\"Active\"",
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "EditInactiveBillingDetailsInfo",
              "text": "<div class=\"editInactiveOptionText\">\n\t<span>The current Billing account is Inactive. \n    <br>You need to select a new Billing Start date.\n    <br>You can also maintain or rebuild the Program Fees.\n    <br>Saving this form will create a new Recurring account.</span>\n</div>",
              "visible": "values('Editing Option')===\"EditBillingDetails\" && values('Billing Status')===\"Inactive\"",
              "renderAttributes": {
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Family Members",
              "title": "",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Include Family Members",
                  "label": "Include Family Members",
                  "key": "f44",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": false,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Program Information",
          "title": "Program Information",
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Apply Discounts",
              "label": "Apply Discounts",
              "key": "f97",
              "defaultValue": "Yes",
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            },
            {
              "type": "field",
              "name": "Payment Frequency",
              "label": "Payment Frequency",
              "key": "f40",
              "defaultValue": "${values('Current Payment Frequency')}",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Dates",
                  "type": "Change",
                  "action": "Custom",
                  "code": "      \n"
                },
                {
                  "name": "Set Fees",
                  "type": "Change",
                  "action": "Custom",
                  "code": "if (K('space').attributes('Ignore Admin Fee')!==\"YES\") {\n  K('field[Admin Fee]').value(K('space').attributes('Admin Fee Charge'));\n} else {\n\tK('field[Admin Fee]').value(\"0\");\n}\n",
                  "runIf": "values('Payment Frequency')!==null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Daily",
                  "value": "Daily"
                },
                {
                  "label": "Weekly",
                  "value": "Weekly"
                },
                {
                  "label": "Fortnightly",
                  "value": "Fortnightly"
                },
                {
                  "label": "Monthly",
                  "value": "Monthly"
                },
                {
                  "label": "Quarterly",
                  "value": "Quarterly"
                },
                {
                  "label": "4 Months",
                  "value": "4 Months"
                },
                {
                  "label": "6 Monthly",
                  "value": "6 Monthly"
                },
                {
                  "label": "Yearly",
                  "value": "Yearly"
                }
              ]
            },
            {
              "type": "field",
              "name": "Family Member",
              "label": "Family Member",
              "key": "f48",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Family Member",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableMemberName",
                      "value": "${resources('Get Family Member:First Name')} ${resources('Get Family Member:Last Name')}",
                      "visible": true
                    },
                    {
                      "field": "tableMemberID",
                      "value": "${resources('Get Family Member:id')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Family Member"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Members:First Name')} ${resources('Members:Last Name')}",
                "value": "${resources('Members:id')}"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Discount Dialog",
              "text": "<div id=\"discountDialog\" title=\"Discount Value\">\n  <input class=\"discountPercent\" type='text' value='%' maxlength='6' pattern=\"[0-9]\"/>\n  <button onclick='applyCurrentDiscount()'>Apply</button>\n</div>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Family Member Select",
              "text": "<div id=\"selectFamilyMemberMenu\"></div>",
              "visible": "values('Include Family Members')===\"Yes\" && !form('review')  && (values('Editing Option')===\"EditBillingDetails\"  ||values('Editing Option')===\"RescheduleWithDetails\"  )",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "tableMemberID",
              "label": "tableMemberID",
              "key": "f50",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableMemberName",
              "label": "tableMemberName",
              "key": "f49",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Programs",
              "label": "Programs",
              "key": "f45",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Program",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableProgram",
                      "value": "${resources('Get Program:Program')} - ${resources('Get Program:Info')}",
                      "visible": true
                    },
                    {
                      "field": "tableFee",
                      "value": "${resources('Get Program:Fee')}",
                      "visible": true
                    },
                    {
                      "field": "tableFeeProgram",
                      "value": "${resources('Get Program:Program')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Program"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Program Fees",
              "choicesRunIf": "",
              "choices": {
                "label": "${resources('Program Fees:Program')} - ${resources('Program Fees:Info')}",
                "value": "${resources('Program Fees:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableProgram",
              "label": "tableProgram",
              "key": "f47",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFeeProgram",
              "label": "tableFeeProgram",
              "key": "f53",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFee",
              "label": "tableFee",
              "key": "f46",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Fee as Individual",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Payment Total",
                      "value": "${values('tableFee')}",
                      "visible": null
                    }
                  ],
                  "runIf": "values('Include Family Members')===\"No\""
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Add buttons",
              "title": null,
              "visible": false,
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "button",
                  "label": "Add My Program",
                  "name": "Add Current Member",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Set Current Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "K('field[tableMemberID]').value(K('field[Members]').value());\nK('field[tableMemberName]').value(K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value());\nDataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();",
                      "runIf": "values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[Members]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Add Family Member Program",
                  "name": "Add Family Member Program",
                  "visible": "values('Include Family Members')===\"Yes\"",
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Add Family Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "DataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();\n",
                      "runIf": "values('tableMemberName')!=null && values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[tableMemberID]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Delete Selected Program",
                  "name": "Delete Selected Program",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Delete Selected Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "var idx=$('#member-table').DataTable().row('.selected').index();\ndebugger;\nif (removedMembers===undefined) {\n removedMembers=new Array(); \n}\nremovedMembers.push(viewerConfig.response[idx].id);\n\nviewerConfig.response.splice([idx],1);\ncompleteTableChange();",
                      "runIf": "$('#member-table tbody tr.selected').length>0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Table",
              "text": "<div id='memberTableDiv' class=\"review\"></div>",
              "visible": "values('Include Family Members')!==null",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "membersJSON",
              "label": "membersJSON",
              "key": "f52",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "removedMembersJSON",
              "label": "removedMembersJSON",
              "key": "f73",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "feesJSON",
              "label": "feesJSON",
              "key": "f51",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "ProgramTableContent",
              "label": "ProgramTableContent",
              "key": "f109",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('ProgramTableContent')===\"EMPTY\"",
              "requiredMessage": "Please ensure you have added appropriate Member Programs.",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Fee Total",
              "label": "Fee Total",
              "key": "f54",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": "values('Editing Option')===\"rescheduleWithDetails\" || values('Editing Option')===\"editBillingDetails\"",
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Update Taxes",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nif (K('field[Fee Total]').value()===null) {\n    K('field[Admin Fee]').value(\"\");\n    K('field[TAX 1]').value(\"\");\n    K('field[TAX 2]').value(\"\");\n    K('field[TAX 3]').value(\"\");\n  \tK('field[Payment Total]').value(\"\");\n} else {\n  var total=0;\n  var subTotal=0;\n  var feeTotal=new Number(K('field[Fee Total]').value());\n  \n\tif (K('space').attributes('Ignore Admin Fee')!==\"YES\") {  \n    var adminFee=K('space').attributes('Admin Fee Charge').replace(\"%\",\"\");\n\n    if (adminFee!==\"\" && adminFee!==0) {\n      var value=(Number(feeTotal)*(Number(adminFee)/100));\n      value=new Number(value.toFixed(2));\n      K('field[Admin Fee]').value(value);\n      subTotal=subTotal+value;\n    }\n  }\n  if (tax1Value!==undefined && tax1Value!==null){\n    var value=feeTotal*(new Number(tax1Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 1]').value(value);\n    subTotal=subTotal+value;\n  }\n  if (tax2Value!==undefined && tax2Value!==null){\n    var value=feeTotal*(new Number(tax2Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 2]').value(value);\n    subTotal=subTotal+value;\n  }\n  if (tax3Value!==undefined && tax3Value!==null){\n    var value=feeTotal*(new Number(tax3Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 3]').value(value);\n    subTotal=subTotal+value;\n  }\n  total=feeTotal+subTotal;\n  K('field[Payment Total]').value(total.toFixed(2));\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Admin Fee",
              "label": "<span id=\"admin_fee_label\">Admin Fee</span>",
              "key": "f65",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 1",
              "label": "TAX 1",
              "key": "f98",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 2",
              "label": "TAX 2",
              "key": "f99",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 3",
              "label": "TAX 3",
              "key": "f100",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Payment Total",
              "label": "Payment Total",
              "key": "f101",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Edit Billing Details",
              "title": null,
              "visible": "values('Editing Option')===\"EditBillingDetails\"",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Update Stripe",
                  "label": "Update Stripe",
                  "key": "f103",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                    "class": "updateStripe"
                  },
                  "dataType": "json",
                  "renderType": "checkbox",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Update Stripe",
                      "value": "Update Stripe"
                    }
                  ]
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Update Information",
                  "text": "Leave this box checked to apply updates to Stripe billing. If unchecked, updates will only be reflected in GB Members and will not modify actual billing in Stripe.",
                  "visible": "values('Billing Status')===\"Active\"",
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Update Stripe details",
              "title": null,
              "visible": "values('Update Stripe')==\"Update Stripe\"",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Immediately",
                  "label": "Immediately (The amount will be updated in GB Members and Stripe immediately for the next scheduled payment; billing dates will remain unchanged.)",
                  "key": "f104",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "values('Billing Status')===\"Active\"",
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [
                    {
                      "name": "Set Date Affective",
                      "type": "Change",
                      "action": "Custom",
                      "code": "K('field[Date Affective]').value(moment().format(\"YYYY-MM-DD\"));"
                    }
                  ],
                  "renderAttributes": {
                  },
                  "dataType": "json",
                  "renderType": "checkbox",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Immediately",
                      "value": "Immediately"
                    }
                  ]
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Date Affective HTML",
                  "text": "<div class=\"form-group required\" linkedField=\"Date Affective\">  \n  <label class=\"field-label\" for=\"dateaffective\">Date Effective(Select the date when the new payment amount will be applied.) (Next billing cycle dates)</label>\n  <div id=\"dateaffective\"></div>\n</div>",
                  "visible": "!form('review') && values('Immediately').indexOf(\"Immediately\")===-1",
                  "renderAttributes": {
                  }
                },
                {
                  "type": "field",
                  "name": "Date Affective",
                  "label": "Date Affective",
                  "key": "f105",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "form('review') ",
                  "enabled": true,
                  "required": "values('Update Stripe')==\"Update Stripe\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "date"
                },
                {
                  "type": "field",
                  "name": "Resume Date Option",
                  "label": "Resume Date Option (Select ‘Until further notice’ to maintain the new total until a new form is submitted. If you choose ‘Resume date,’ the pricing will revert to the original total after the selected date.)",
                  "key": "f106",
                  "defaultValue": "Until Further Notice",
                  "defaultResourceName": null,
                  "visible": "values('Billing Status')===\"Active\"",
                  "enabled": "!form('review') && values('Billing Status')===\"Active\"",
                  "required": "values('Editing Option')===\"EditBillingDetails\" && values('Update Stripe')==\"Update Stripe\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Until Further Notice",
                      "value": "Until Further Notice"
                    },
                    {
                      "label": "Resume Date",
                      "value": "Resume Date"
                    }
                  ]
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Date Payments Resume HTML",
                  "text": "<div class=\"form-group required\" linkedField=\"Date Payments Resume\">  \n  <label class=\"field-label\" for=\"datepaymentsresume\">Date Payments Resume (Date Previous payment amount will be resumed) (Next billing cycle dates)</label>\n  <div id=\"datepaymentsresume\"></div>\n</div>",
                  "visible": "!form('review') && values('Resume Date Option')==\"Resume Date\"",
                  "renderAttributes": {
                  }
                },
                {
                  "type": "field",
                  "name": "Date Payments Resume",
                  "label": "Date Payments Resume",
                  "key": "f107",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "form('review') && values('Resume Date Option')===\"Resume Date\"",
                  "enabled": "values('Resume Date Option')==\"Resume Date\"",
                  "required": "values('Resume Date Option')==\"Resume Date\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "date"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "New Schedule Date",
              "title": null,
              "visible": "values('Editing Option')===\"RescheduleDateOnly\" || values('Editing Option')===\"RescheduleWithDetails\"",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "New Billing Start Date HTML",
                  "text": "<div class=\"form-group required\" linkedField=\"New Billing Start Date\">  \n  <label class=\"field-label\" for=\"newBillingStartDate\">New Billing Start Date (Date which will be next billed on)</label>\n  <div id=\"newBillingStartDate\"></div>\n</div>",
                  "visible": "!form('review')",
                  "renderAttributes": {
                  }
                },
                {
                  "type": "field",
                  "name": "New Billing Start Date",
                  "label": "New Billing Start Date",
                  "key": "f57",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "form('review') ",
                  "enabled": true,
                  "required": "values('Editing Option')===\"RescheduleDateOnly\" || values('Editing Option')===\"RescheduleWithDetails\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "date"
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Inactive Payment Options",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Payment Options",
              "label": "Payment Options",
              "key": "f111",
              "defaultValue": "Use existing payment details",
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Load Stripe Card Info",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nsetTimeout(function() {\n  stripe = Stripe(K('space').attributes('POS Stripe Publishable Key'),{\"stripeAccount\":K('space').attributes('Stripe Account ID')});\n  elements = stripe.elements();\n\n  cardElement = elements.create('card', {hidePostalCode: true});\n  cardElement.mount('#card-element');\n  cardElement.on('change', function(event) {\n    debugger;\n    if (event.complete) {\n       K('field[Payment Method Complete]').value(\"COMPLETED\");\t\t\n    } else {\n       K('field[Payment Method Complete]').value(\"\");\t\t\n    }\n  });\n},3000);",
                  "runIf": "values('Payment Options')===\"Set new payment details\""
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Use existing payment details",
                  "value": "Use existing payment details"
                },
                {
                  "label": "Set new payment details",
                  "value": "Set new payment details"
                }
              ]
            },
            {
              "type": "field",
              "name": "Payment Method",
              "label": "Payment Method",
              "key": "f112",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Options')===\"Set new payment details\"",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Credit Card",
                  "value": "Credit Card"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Credit Card Details",
              "title": "Credit Card Details",
              "visible": "values('Payment Method')===\"Credit Card\"",
              "omitWhenHidden": false,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Credit Card Capture",
                  "text": "\n<!--\n  Or create a <label> with a 'for' attribute,\n  referencing the ID of your container.\n-->\n<label for=\"card-element\"></label>\n<div id=\"card-element\"></div>\n",
                  "visible": true,
                  "renderAttributes": {
                  }
                },
                {
                  "type": "field",
                  "name": "Credit Card Number",
                  "label": "Credit Card Number",
                  "key": "f113",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Credit Card Expiry Month",
                  "label": "Credit Card Expiry Month",
                  "key": "f114",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Credit Card Expiry Year",
                  "label": "Credit Card Expiry Year",
                  "key": "f115",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Card Error",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Error Details",
              "text": "<p class=\"errorDetails\" id=\"errorValue\"/p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Member Select Space",
          "title": null,
          "visible": "values('Include Family Members')===null || values('Payment Options') === \"Set new payment details\"",
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Select Space",
              "text": "<div style=\"height:100px\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "button",
          "label": "Submit",
          "name": "Submit",
          "visible": true,
          "enabled": "Object.keys(K('form').validate()).length===0",
          "renderType": "custom",
          "renderAttributes": {
          },
          "events": [
            {
              "name": "Submit Reschedule of Active",
              "type": "Click",
              "action": "Custom",
              "code": "debugger;\nif (Object.keys(K('form').validate()).length>0) {\n  K('form').submitPage();\n} else {\n  $(\"#errorValue\").html(\"\");\n  $(\"#errorValue\").hide();\n  K('button[Submit]').disable();\n\tK('field[Billing Period]').value(K('field[Payment Frequency]').value());\n\n  var settings = {\n    \"crossDomain\": true,\n    \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/createSchedule\",\n    \"method\": \"POST\",\n    \"headers\": {},\n    \"dataType\": \"json\",\n    \"contentType\": \"application/json\",\n    \"data\": JSON.stringify({\n      \"space\": K('space').slug(),\n      \"customerId\": K('field[Billing Customer Reference]').value(),\n      \"scheduleStartDate\": K('field[New Billing Start Date]').value(),\n      \"schedulePeriodType\": K('field[Payment Frequency]').value(),\n      \"billingService\": \"Stripe\",\n      \"gbmemberId\": K('submission').id()\n    })\n  }\n\n  $.ajax(settings).done(function (registerResponse) {\n    debugger;\n    console.log(registerResponse);\n    if (registerResponse.error===100) {\n      var message=registerResponse.errorMessage;\n      if (registerResponse.errorMessage===\"DECLINE\") {\n        message=\"Credit Card not valid (Declined)\";  \n      }\n      $(\"#errorValue\").html(message);\n      $(\"#errorValue\").show();\n      K('button[Submit]').enable();      \n    } else {\n      K('field[customerBillingId]').value(registerResponse.data.customerBillingId);\n\t\t  K('form').submitPage();\n    }\n  });\n }",
              "runIf": "isRescheduleChange() && values('Billing Status')===\"Active\""
            },
            {
              "name": "Submit Edit Billing Details",
              "type": "Click",
              "action": "Custom",
              "code": "debugger;\nif (Object.keys(K('form').validate()).length===0) {\n  K('form').submitPage();\n}",
              "runIf": "isEditBillingDetails() && values('Billing Status')===\"Active\""
            },
            {
              "name": "Submit Inactive Details",
              "type": "Click",
              "action": "Custom",
              "code": "debugger;\n\nif (Object.keys(K('form').validate()).length>0) {\n  K('form').submitPage();\n} else {\n  K('button[Submit]').disable();\n  if (K('field[Payment Options]').value()===\"Set new payment details\") {  \n    var paymentType=\"\";\n    if (K('field[Payment Method]').value()===\"Credit Card\") {\n      paymentType=\"card\";\n    } else {\n      paymentType=\"sepa_debit\";\n    }\n\n    stripe\n      .createSource(paymentType===\"card\" ? cardElement : ibanElement, {\n      type: paymentType,\n      currency:  K('space').attributes('Currency'),\n      owner: {\n        name: K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value(),\n      },\n    })\n    .then(function(result) {\n      // Handle result.error or result.source\n      if (result.error) {\n        K('button[Submit]').enable();\n        $(\"#errorValue\").html(result.error.message);\n        K('section[Card Error]').show();\n      } else {\n        debugger;\n        console.log(result.source);\n        sourceID=result.source.id;\n        \n        var paymentSettings = {\n          \"crossDomain\": true,\n          \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/savePaymentMethod\",\n          \"method\": \"POST\",\n          \"headers\": {},\n          \"dataType\": \"json\",\n          \"contentType\": \"application/json\",\n          \"data\": JSON.stringify({\n            \"customerId\": K('field[Billing Customer Id]').value(),\n            \"paymentMethod\": \"CREDITCARD\",\n            \"cardToken\": sourceID,\n            \"space\": K('space').slug(),\n            \"billingService\": K('space').attributes('Billing Company'),\n          })\n        }\n        $.ajax(paymentSettings).done(function (response) {\n          debugger;\n          console.log(response);\n          if (response.error===100) {\n            var message=response.errorMessage;\n            if (response.errorMessage===\"DECLINE\") {\n              message=\"Credit Card not valid (Declined)\";  \n            }\n\t\t        K('button[Submit]').enable();\n            $(\"#errorValue\").html(message);\n            K('section[Card Error]').show();\n          } else {\n            K('section[Card Error]').hide();\n            completeRegisterUser();\n          }\n        });                \n        \n      }    \n    });\n  } else {\n    completeRegisterUser();\n  }\n}\n"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "Load Members Select",
          "type": "Load",
          "action": "Custom",
          "code": "discounts=(K('space').attributes('Member Discounts')!==undefined ? JSON.parse(K('space').attributes('Member Discounts')) : []);  \n\nbundle.config.widgets.selectMenu({\n  element: K(\"form\").find(\"#selectMemberMenu\")[0],\n\toptions: K('field[Members]').options(),\n  onChange: function(option) {\n\t  K('field[Members]').value(option.value);\n    setTimeout(function(){\n    \t$(K(\"form\").find(\"#selectMemberMenu [class$='placeholder']\")).html(option.label);\n    },100);\n\t},\n  value: K('field[Members]').value(),\n});\ndebugger;\nif (GetURLParameter(\"id\")!==null && GetURLParameter(\"id\")!==undefined) {\n  K('field[Members]').value(GetURLParameter(\"id\"));\n  $(K('field[Members]').options()).each(function(index) {\n    if (K('field[Members]').options()[index].value===GetURLParameter(\"id\")) {\n      label=K('field[Members]').options()[index].label;\n    \t$(K(\"form\").find(\"#selectMemberMenu [class$='placeholder']\")).html(label);\n    }\n  });      \n  K('section[Select Member]').hide();\n}\n\n\nbundle.config.widgets.selectMenu({\n  element: K(\"form\").find(\"#selectFamilyMemberMenu\")[0],\n\toptions: K('field[Family Member]').options(),\n  onChange: function(option) {\n\t  K('field[Family Member]').value(option.value);\n    setTimeout(function(){\n      $(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(option.label);\n    },100);\n\t},\n  value: K('field[Family Member]').value(),\n});\n",
          "runIf": "!form('review')"
        },
        {
          "name": "Handle Errors",
          "type": "Submit",
          "action": "Custom",
          "code": "debugger;\nif (!jQuery.isEmptyObject(K('form').validate())){\n  setTimeout(function(){\n  if ($(\".has-error\").length>0){\n    $(\".has-error\").each(function(i,l) { \n      if ($(l).attr(\"data-element-name\").indexOf(\"Signature\")!==-1) {\n        sigCanElName=$(l).attr(\"data-element-name\").replace(\"Encoded \",\"\");\n        $(K('content['+sigCanElName+']').element()).addClass(\"has-error\");\n      }\n    })  \n    $('.main-container').animate({\n      scrollTop: 0\n    },500);\n  }\n  },100);\n}"
        },
        {
          "name": "Load Previous set page",
          "type": "Load",
          "action": "Custom",
          "code": "K('section[Student Information]').show();\nK('section[Program Information]').show();\n\nK('section[Member Select Space]').hide();    \n",
          "runIf": "values('Members')!==null"
        },
        {
          "name": "Set Payment Frequencies",
          "type": "Load",
          "action": "Custom",
          "code": "options=[];\nvar freqValue=K('field[Payment Frequency]').value();\nK('space').attributes('Payment Frequencies').split(\",\").forEach(function(value) {\n\toptions[options.length]={'label':value,'value':value};\n});\nK('field[Payment Frequency]').options(options);\nsetTimeout(function() { K('field[Payment Frequency]').value(freqValue); }, 100, freqValue);\n\nK('field[Payment Frequency]').disable();",
          "runIf": ""
        },
        {
          "name": "Load Members Table",
          "type": "Load",
          "action": "Custom",
          "code": "global.viewerConfig ={\n  resultsContainer:\n  '<table cellspacing=\"0\", border=\"0\", class=\"table table-striped table-bordered table-condensed dataTable\">',\n  data: [\n  {\n  title: 'MemberID',\n  name: 'id',\n  setField: 'tableMemberID',\n  class: 'hidden'\n  },\n  {\n  title: 'Name',\n  name: 'Name',\n  setField: 'tableMemberName'\n  },\n  {\n  title: 'Fee Program',\n  name: 'feeProgram',\n  setField: 'tableFeeProgram',\n  class: 'hidden'\n  },\n  {\n  title: 'Program',\n  name: 'program',\n  setField: 'tableProgram'\n  },\n  {\n  title: 'Fee',\n  name: 'fee',\n  setField: 'tableFee'\n  },\n  {\n  title: 'Cost',\n  name: 'cost',\n  class: 'hidden',\n  setField: 'tableFee'\n  },\n\t{\n  title: 'Discount',\n  name: 'discount',\n    render: function ( data, type, record ) {\n      debugger;\n      return \"<span>\"+data+\"<i class='discountEdit fa fa-pen review_\"+form('review')+\"' placeholder='Edit member discount' onclick='editDiscount(\\\"\"+record.id+\"\\\")'></i></span>\";\n    },\n  },\n],\n  resultsContainerId: 'member-table',\n  before: function(configObj) {\n\n  },\n  error: function(configObj) {},\n  complete: function(configObj) {\n\n  },\n  removeOnClick: false,\n  renderer: {\n  type: DataViewer.Renderers.DataTables, // Passing a function here allows for better customization\n  options: {\n  // Options for Render\n  processSingleResult: false,\n  // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n  // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n  responsive: false,\n  dom: 'tip',\n  orderFixed: [[4, 'desc']], /* Fee */\n  paging: false,\n  scrollY: '60vh',\n  scrollCollapse: true,\n  select: {\n  \tstyle: 'single',\n\t\tselector: 'td:first-child'\n\t},\n  createdRow: function createdRow(row, data, dataIndex) {\n\n  },\n\tdeferRender: true,\n}\n}\n};\nviewerConfig.response = (K('field[feesJSON]').value()===null ? [] : JSON.parse(K('field[feesJSON]').value()));\nDataViewer.renderResults($('#memberTableDiv'), viewerConfig);\n\nsetTimeout(function() {\n  $(\"#discountDialog\").dialog({\n    autoOpen : false, modal : true, show : \"blind\", hide : \"blind\"\n  });\n},1000);\n"
        },
        {
          "name": "Set JSON",
          "type": "Submit",
          "action": "Custom",
          "code": "debugger;\nif (viewerConfig.response!==null) {\n  K('field[feesJSON]').value(JSON.stringify(viewerConfig.response));\n\n  members=new Array();\n  viewerConfig.response.forEach(function(item){\n    members.push(item.id);\n  });\n  K('field[membersJSON]').value(JSON.stringify(members));\n}\nif (removedMembers!==undefined) {\n  removedMembers=removedMembers.filter(element => members.findIndex(checkID => checkID===element)===-1 ? true : false)\n  uniqueMembers=new Array()\n  removedMembers.forEach(id => { if (!uniqueMembers.includes(id)) uniqueMembers.push(id); });\n  K('field[removedMembersJSON]').value(JSON.stringify(uniqueMembers));\n} else {\n  K('field[removedMembersJSON]').value(JSON.stringify(new Array()));\n}\n\n"
        },
        {
          "name": "Set Source IP",
          "type": "Load",
          "action": "Custom",
          "code": "$.getJSON('https://ipapi.co/json/', function(data) {\n  console.log(JSON.stringify(data, null, 2));\n  K('field[Source IP]').value(data.ip);\n});"
        },
        {
          "name": "Review",
          "type": "Load",
          "action": "Custom",
          "code": "  let tax1Label=K('space').attributes('TAX 1 Label'); \n  tax1Value=K('space').attributes('TAX 1 Value');     \n  if (tax1Label!==undefined && tax1Label!==null && K('field[TAX 1]').value()!==null) {\n    $(K('field[TAX 1]').wrapper()).find(\"label\").html(tax1Label);\n    K('field[TAX 1]').show();\n  }\n\n  let tax2Label=K('space').attributes('TAX 2 Label'); \n  tax2Value=K('space').attributes('TAX 2 Value');                \n  if (tax2Label!==undefined && tax2Label!==null && K('field[TAX 2]').value()!==null) {\n    $(K('field[TAX 2]').wrapper()).find(\"label\").html(tax2Label);\n    K('field[TAX 2]').show();\n  }\n\n  let tax3Label=K('space').attributes('TAX 3 Label'); \n  tax3Value=K('space').attributes('TAX 3 Value');                \n  if (tax3Label!==undefined && tax3Label!==null && K('field[TAX 3]').value()!==null) {\n    $(K('field[TAX 3]').wrapper()).find(\"label\").html(tax3Label);\n    K('field[TAX 3]').show();\n  }\n\n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n    K('field[Admin Fee]').hide();\n  } else {\n    K('field[Admin Fee]').show();\n  }\n    \n  if (K('field[Fee Total]').value()===null || K('field[Fee Total]').value()===\"\"){\n    K('field[Fee Total]').hide();\n  } else {\n    K('field[Fee Total]').show();\n  }\n  \n  if (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n  } else {\n    if (K('space').attributes('Admin Fee Label')!==null && K('space').attributes('Admin Fee Label')!==\"\"/* && (K('field[Admin Fee]').value()===null || K('field[Admin Fee]').value().indexOf(\"%\")===-1)*/) {\n      $(\"#admin_fee_label\").html(K('space').attributes('Admin Fee Label'));\n    }\n  }\n\nif (K('field[Editing Option]').value()===\"RescheduleDateOnly\") {\n  rescheduleDateOnly();\n  $(\"#rescheduleDateOnly\").prop(\"checked\", true)\n}\nif (K('field[Editing Option]').value()===\"RescheduleWithDetails\") {\n\trescheduleWithDetails();\n  $(\"#rescheduleWithDetails\").prop(\"checked\", true)\n}\nif (K('field[Editing Option]').value()===\"EditBillingDetails\") {\n\teditBillingDetails();\n  $(\"#editBillingDetails\").prop(\"checked\", true)\n}\n$('input[name=\"editingOptions\"]').prop('disabled', true);\nK('field[Programs]').hide();\n",
          "runIf": "form('review')"
        },
        {
          "name": "Set Editing Options",
          "type": "Load",
          "action": "Custom",
          "code": "setTimeout(function(){\n   $(\"#rescheduleDateOnly\").click(function (){rescheduleDateOnly()});\n   $(\"#rescheduleWithDetails\").click(function (){rescheduleWithDetails()});\n   $(\"#editBillingDetails\").click(function (){editBillingDetails()});\n},1000);",
          "runIf": "!form('review')"
        }
      ],
      "name": "Instalment Information",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [
    {
      "endpoint": "Display",
      "name": "Bombara Program Managers"
    },
    {
      "endpoint": "Submission Access",
      "name": "Bombara Program Managers"
    },
    {
      "endpoint": "Submission Modification",
      "name": "Bombara Program Managers"
    }
  ],
  "slug": "stripe-submit-billing-changes",
  "status": "Active",
  "submissionLabelExpression": "${values('Student First Name')} ${values('Student Last Name')} ",
  "type": "Service"
}